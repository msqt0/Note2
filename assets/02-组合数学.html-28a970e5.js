import{_ as g,M as f,p as v,q as b,R as t,t as n,N as s,V as a,a1 as c}from"./framework-7db056f4.js";const x={},w=t("h1",{id:"组合数学",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#组合数学","aria-hidden":"true"},"#"),n(" 组合数学")],-1),C=t("h2",{id:"组合数",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#组合数","aria-hidden":"true"},"#"),n(" 组合数")],-1),L={class:"katex"},X={class:"katex-mathml"},Y=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8801079999999999em;"></span><span class="strut bottom" style="height:1.400108em;vertical-align:-0.52em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.247em;margin-left:-0.07153em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">n</span></span></span><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">m</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.34500000000000003em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">m</span><span class="mclose">!</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mbin">−</span><span class="mord mathit">m</span><span class="mclose">)</span><span class="mclose">!</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">n</span><span class="mclose">!</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span>',1),q=t("p",null,"复杂度：",-1),D={class:"katex"},N={class:"katex-mathml"},j=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">m</span><span class="mclose">)</span></span></span>',1),A=c(`<p>特点：</p><ul><li>求单个组合数</li></ul><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> ll<span class="token punctuation">;</span>
ll res<span class="token punctuation">;</span>

<span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">;</span>

ll <span class="token function">C</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    ll res <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> a<span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> b <span class="token punctuation">;</span> i <span class="token operator">--</span><span class="token punctuation">,</span> j <span class="token operator">++</span><span class="token punctuation">)</span>
        res <span class="token operator">=</span> res <span class="token operator">*</span> i <span class="token operator">/</span> j<span class="token punctuation">;</span> <span class="token comment">//会暴 long long</span>

    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> m<span class="token punctuation">;</span>

    res <span class="token operator">=</span> <span class="token function">C</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>

    cout <span class="token operator">&lt;&lt;</span> res <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>高精度直接求解<br></p>`,5),B=t("code",null,"N",-1),O={class:"katex"},F={class:"katex-mathml"},E=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.7520519999999999em;"></span><span class="strut bottom" style="height:1.0533599999999999em;vertical-align:-0.3013079999999999em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10903em;">N</span><span class="mrel">=</span><span class="mord"><span class="mord mathit">p</span><span class="vlist"><span style="top:0.266308em;margin-left:0em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span style="top:-0.4498em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord"><span class="mord mathit">a</span><span class="vlist"><span style="top:0.15em;margin-right:0.07142857142857144em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit">p</span><span class="vlist"><span style="top:0.266308em;margin-left:0em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span style="top:-0.4498em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord"><span class="mord mathit">a</span><span class="vlist"><span style="top:0.15em;margin-right:0.07142857142857144em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mord"><span class="mord mathit">p</span><span class="vlist"><span style="top:0.3013079999999999em;margin-left:0em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span><span style="top:-0.45065999999999995em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord"><span class="mord mathit">a</span><span class="vlist"><span style="top:0.15122857142857138em;margin-right:0.07142857142857144em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span>',1),V={class:"katex"},I={class:"katex-mathml"},R=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.15em;"></span><span class="strut bottom" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">n</span><span class="mord"><span class="mord mathit">t</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">p</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">m</span><span class="mord mathit">i</span><span class="mopen">(</span><span class="mord mathit">a</span><span class="mclose">!</span><span class="mclose">)</span><span class="mrel">=</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">⌊</span></span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">p</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">a</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">⌋</span></span></span><span class="mbin">+</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">⌊</span></span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord"><span class="mord mathit">p</span><span class="vlist"><span style="top:-0.289em;margin-right:0.07142857142857144em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">a</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">⌋</span></span></span><span class="mbin">+</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mbin">+</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">⌊</span></span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.35951999999999984em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord"><span class="mord mathit">p</span><span class="vlist"><span style="top:-0.289em;margin-right:0.07142857142857144em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">a</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">⌋</span></span></span></span></span>',1),$=t("br",null,null,-1),K=t("p",null,"那么只要先筛选出质数",-1),M={class:"katex"},P={class:"katex-mathml"},S=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">n</span><span class="mord"><span class="mord mathit">t</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">p</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord mathit">a</span><span class="mclose">!</span><span class="mclose">)</span><span class="mord mathit">m</span><span class="mord mathit">i</span><span class="mpunct">,</span><span class="mord mathit">c</span><span class="mord mathit">n</span><span class="mord"><span class="mord mathit">t</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">p</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord mathit">b</span><span class="mclose">!</span><span class="mclose">)</span><span class="mord mathit">m</span><span class="mord mathit">i</span><span class="mpunct">,</span><span class="mord mathit">c</span><span class="mord mathit">n</span><span class="mord"><span class="mord mathit">t</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">p</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathit">a</span><span class="mbin">−</span><span class="mord mathit">b</span><span class="mclose">)</span><span class="mclose">!</span><span class="mclose">)</span><span class="mord mathit">m</span><span class="mord mathit">i</span></span></span>',1),T={class:"katex"},G={class:"katex-mathml"},H=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8801079999999999em;"></span><span class="strut bottom" style="height:1.400108em;vertical-align:-0.52em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.247em;margin-left:-0.07153em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">a</span></span></span><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">b</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.34500000000000003em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">b</span><span class="mclose">!</span><span class="mopen">(</span><span class="mord mathit">a</span><span class="mbin">−</span><span class="mord mathit">b</span><span class="mclose">)</span><span class="mclose">!</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">a</span><span class="mclose">!</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span>',1),J={class:"katex"},Q={class:"katex-mathml"},U=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mrel">=</span><span class="mord mathit">c</span><span class="mord mathit">n</span><span class="mord"><span class="mord mathit">t</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">p</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">m</span><span class="mord mathit">i</span><span class="mopen">(</span><span class="mord mathit">a</span><span class="mclose">!</span><span class="mclose">)</span><span class="mbin">−</span><span class="mord mathit">c</span><span class="mord mathit">n</span><span class="mord"><span class="mord mathit">t</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">p</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">m</span><span class="mord mathit">i</span><span class="mopen">(</span><span class="mord mathit">b</span><span class="mclose">!</span><span class="mclose">)</span><span class="mbin">−</span><span class="mord mathit">c</span><span class="mord mathit">n</span><span class="mord"><span class="mord mathit">t</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">p</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">m</span><span class="mord mathit">i</span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathit">a</span><span class="mbin">−</span><span class="mord mathit">b</span><span class="mclose">)</span><span class="mclose">!</span><span class="mclose">)</span></span></span>',1),W=c(`<p>最后用大数乘小数的方式把结果算出来</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;vector&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">5010</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> primes<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span> cnt<span class="token punctuation">;</span>
<span class="token keyword">int</span> k<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">bool</span> st<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">get_primes</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> x <span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>st<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> primes<span class="token punctuation">[</span>cnt <span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> primes<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> x <span class="token operator">/</span> i <span class="token punctuation">;</span> j <span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            st<span class="token punctuation">[</span>primes<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">*</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> primes<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> p<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        a <span class="token operator">/=</span> p<span class="token punctuation">;</span>
        res <span class="token operator">+=</span> a<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token function">mul</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token operator">&amp;</span>a<span class="token punctuation">,</span> <span class="token keyword">int</span> p<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> c<span class="token punctuation">;</span>

    <span class="token keyword">int</span> t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> a<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        t <span class="token operator">+=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*</span> p<span class="token punctuation">;</span>
        c<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>t <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        t <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>t<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        c<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>t <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        t <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> c<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b<span class="token punctuation">;</span>

    <span class="token function">get_primes</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//线性筛法</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cnt  <span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> p <span class="token operator">=</span> primes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>

        k<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">get</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> p<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">get</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> p<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">get</span><span class="token punctuation">(</span>a <span class="token operator">-</span> b<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取指数</span>

    <span class="token punctuation">}</span>

    vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> res<span class="token punctuation">;</span>
    res<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cnt <span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> j <span class="token operator">&lt;</span> k<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token punctuation">;</span> j <span class="token operator">++</span><span class="token punctuation">)</span>
            res <span class="token operator">=</span> <span class="token function">mul</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> primes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将质数的 k 次方全部乘起来</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> res<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span>  <span class="token punctuation">;</span> i <span class="token operator">--</span><span class="token punctuation">)</span>
        cout <span class="token operator">&lt;&lt;</span> res<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="递推求解" tabindex="-1"><a class="header-anchor" href="#递推求解" aria-hidden="true">#</a> 递推求解</h3>`,3),Z={class:"katex"},ss={class:"katex-mathml"},as=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.854239em;"></span><span class="strut bottom" style="height:1.178878em;vertical-align:-0.324639em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.247em;margin-left:-0.07153em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">n</span></span></span><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">m</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.24810799999999997em;margin-left:-0.07153em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span><span class="mbin">−</span><span class="mord mathrm">1</span></span></span></span><span style="top:-0.36299999999999993em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">m</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.266308em;margin-left:-0.07153em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span><span class="mbin">−</span><span class="mord mathrm">1</span></span></span></span><span style="top:-0.403131em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">m</span><span class="mbin">−</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span>',1),ns=t("blockquote",null,[t("p",null,"证明可从两个角度："),t("ol",null,[t("li",null,"杨辉三角某数等于其顶部左右两数之和"),t("li",null,[n("集合意义上从 n 个东西中选取 m 个的所有情况数等于 "),t("ul",null,[t("li",null,"第 n 个数不选取，从前 n - 1 中选 m 个数"),t("li",null,"第 n 个数选取，从前 n - 1 中选取 m - 1 个数")])])])],-1),es=t("p",null,"复杂度：",-1),ts={class:"katex"},ls={class:"katex-mathml"},ps=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathit">n</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mclose">)</span></span></span>',1),is={class:"katex"},cs={class:"katex-mathml"},os=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathit">n</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mclose">)</span></span></span>',1),rs=t("p",null,"特点：",-1),us=t("ul",null,[t("li",null,"能简单求解多的组合数")],-1),ms={class:"katex"},ds={class:"katex-mathml"},fs=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">1</span><span class="mrel">≤</span><span class="mord mathit">n</span><span class="mrel">≤</span><span class="mord mathrm">1</span><span class="mord"><span class="mord mathrm">0</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">5</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mpunct">,</span><span class="mord mathrm">1</span><span class="mrel">≤</span><span class="mord mathit">b</span><span class="mrel">≤</span><span class="mord mathit">a</span><span class="mrel">≤</span><span class="mord mathrm">2</span><span class="mord mathrm">0</span><span class="mord mathrm">0</span><span class="mord mathrm">0</span></span></span>',1),_s=c(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">2010</span><span class="token punctuation">,</span> mod <span class="token operator">=</span> <span class="token number">1e9</span> <span class="token operator">+</span> <span class="token number">7</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> f<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> n<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> N <span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> f<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> f<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> N <span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> i <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> j <span class="token operator">++</span><span class="token punctuation">)</span>
            f<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>f<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> f<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token operator">%</span> mod<span class="token punctuation">,</span>
            f<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>i <span class="token operator">-</span> j<span class="token punctuation">]</span> <span class="token operator">=</span> f<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>n <span class="token operator">--</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>
        cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b<span class="token punctuation">;</span>
        cout <span class="token operator">&lt;&lt;</span> f<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">[</span>b<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="预处理求解" tabindex="-1"><a class="header-anchor" href="#预处理求解" aria-hidden="true">#</a> 预处理求解</h3>`,2),ks={class:"katex"},hs={class:"katex-mathml"},ys=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8801079999999999em;"></span><span class="strut bottom" style="height:1.400108em;vertical-align:-0.52em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.247em;margin-left:-0.07153em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">n</span></span></span><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">m</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.34500000000000003em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">m</span><span class="mclose">!</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mbin">−</span><span class="mord mathit">m</span><span class="mclose">)</span><span class="mclose">!</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">n</span><span class="mclose">!</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span>',1),zs=t("br",null,null,-1),gs=t("br",null,null,-1),vs=t("br",null,null,-1),bs=t("blockquote",null,[t("p",null,"一般题目 mod = 1e9 + 7 为质数，且 2~1e9+6 都与 1e9+7 互质，所以可以使用费马小定理、快速幂来求逆元，当然也可以使用扩展欧几里得来求。")],-1),xs=t("p",null,"复杂度：",-1),ws={class:"katex"},Cs={class:"katex-mathml"},Ls=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mord mathit">o</span><span class="mord mathit" style="margin-right:0.03588em;">g</span><span class="mord mathit">n</span><span class="mclose">)</span></span></span>',1),Xs={class:"katex"},Ys={class:"katex-mathml"},qs=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">1</span><span class="mrel">≤</span><span class="mord mathit">n</span><span class="mrel">≤</span><span class="mord mathrm">1</span><span class="mord"><span class="mord mathrm">0</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">4</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mpunct">,</span><span class="mord mathrm">1</span><span class="mrel">≤</span><span class="mord mathit">b</span><span class="mrel">≤</span><span class="mord mathit">a</span><span class="mrel">≤</span><span class="mord mathrm">1</span><span class="mord"><span class="mord mathrm">0</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">5</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span>',1),Ds=c(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">using</span> LL <span class="token operator">=</span> <span class="token keyword">long</span> <span class="token keyword">long</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">1e5</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">,</span> mod <span class="token operator">=</span> <span class="token number">1e9</span> <span class="token operator">+</span> <span class="token number">7</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> fact<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span> infact<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> n<span class="token punctuation">;</span>

LL <span class="token function">qmi</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">,</span> <span class="token keyword">int</span> p<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    LL res <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>k<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> res <span class="token operator">=</span> res <span class="token operator">*</span> a <span class="token operator">%</span> mod<span class="token punctuation">;</span>
        a <span class="token operator">=</span> <span class="token number">1LL</span> <span class="token operator">*</span> a <span class="token operator">*</span> a <span class="token operator">%</span> mod<span class="token punctuation">;</span>
        k <span class="token operator">&gt;&gt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    fact<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> infact<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> N <span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        fact<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1LL</span> <span class="token operator">*</span> fact<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> i <span class="token operator">%</span> mod<span class="token punctuation">;</span>
        infact<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1LL</span> <span class="token operator">*</span> infact<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token function">qmi</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> mod <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">,</span> mod<span class="token punctuation">)</span> <span class="token operator">%</span> mod<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>n <span class="token operator">--</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>
        cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b<span class="token punctuation">;</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token number">1LL</span> <span class="token operator">*</span> fact<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">*</span> infact<span class="token punctuation">[</span>b<span class="token punctuation">]</span> <span class="token operator">%</span> mod <span class="token punctuation">)</span> <span class="token operator">*</span> infact<span class="token punctuation">[</span>a <span class="token operator">-</span> b<span class="token punctuation">]</span> <span class="token operator">%</span> mod <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span><span class="token comment">//模两次是防止数据暴 long long</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>优化</p>`,2),Ns={class:"katex"},js={class:"katex-mathml"},As=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mord mathit">o</span><span class="mord mathit" style="margin-right:0.03588em;">g</span><span class="mord mathit">n</span><span class="mclose">)</span></span></span>',1),Bs={class:"katex"},Os={class:"katex-mathml"},Fs=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span><span class="mord mathit">n</span><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mord mathit">a</span><span class="mord mathit">c</span><span class="mord mathit">t</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mbin">−</span><span class="mord mathrm">1</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord mathit">i</span><span class="mord mathit">n</span><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mord mathit">a</span><span class="mord mathit">c</span><span class="mord mathit">t</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mclose">)</span><span class="mbin">∗</span><span class="mord mathit">n</span></span></span>',1),Es={class:"katex"},Vs={class:"katex-mathml"},Is=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mclose">)</span></span></span>',1),Rs=c(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">using</span> LL <span class="token operator">=</span> <span class="token keyword">long</span> <span class="token keyword">long</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">1e5</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">,</span> mod <span class="token operator">=</span> <span class="token number">1e9</span> <span class="token operator">+</span> <span class="token number">7</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> fact<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span> infact<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> n<span class="token punctuation">;</span>

LL <span class="token function">qmi</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">,</span> <span class="token keyword">int</span> p<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    LL res <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>k<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> res <span class="token operator">=</span> res <span class="token operator">*</span> a <span class="token operator">%</span> mod<span class="token punctuation">;</span>
        a <span class="token operator">=</span> <span class="token number">1LL</span> <span class="token operator">*</span> a <span class="token operator">*</span> a <span class="token operator">%</span> mod<span class="token punctuation">;</span>
        k <span class="token operator">&gt;&gt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    fact<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> infact<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> N <span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span>
        fact<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1LL</span> <span class="token operator">*</span> fact<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> i <span class="token operator">%</span> mod<span class="token punctuation">;</span>

    infact<span class="token punctuation">[</span>N<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">qmi</span><span class="token punctuation">(</span>fact<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span> mod <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">,</span> mod<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> N <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">--</span><span class="token punctuation">)</span>
        infact<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1LL</span> <span class="token operator">*</span> infact<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> mod<span class="token punctuation">;</span>

    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>n <span class="token operator">--</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>
        cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b<span class="token punctuation">;</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token number">1LL</span> <span class="token operator">*</span> fact<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">*</span> infact<span class="token punctuation">[</span>b<span class="token punctuation">]</span> <span class="token operator">%</span> mod <span class="token punctuation">)</span> <span class="token operator">*</span> infact<span class="token punctuation">[</span>a <span class="token operator">-</span> b<span class="token punctuation">]</span> <span class="token operator">%</span> mod <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="卢卡斯定理求解" tabindex="-1"><a class="header-anchor" href="#卢卡斯定理求解" aria-hidden="true">#</a> 卢卡斯定理求解</h3>`,2),$s={class:"katex"},Ks={class:"katex-mathml"},Ms=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.0448em;"></span><span class="strut bottom" style="height:1.5599999999999998em;vertical-align:-0.5151999999999999em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.247em;margin-left:-0.07153em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">a</span></span></span><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">b</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">≡</span><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.34019999999999995em;margin-left:-0.07153em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">a</span><span class="mord mathrm">%</span><span class="mord mathit">p</span></span></span></span><span style="top:-0.480908em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">b</span><span class="mord mathrm">%</span><span class="mord mathit">p</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">∗</span><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.3401999999999999em;margin-left:-0.07153em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">a</span><span class="mord mathrm">/</span><span class="mord mathit">p</span></span></span></span><span style="top:-0.5198em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">b</span><span class="mord mathrm">/</span><span class="mord mathit">p</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord mathit">m</span><span class="mord mathit">o</span><span class="mord mathit">d</span><span class="mord mspace"> </span><span class="mord mathit">p</span><span class="mclose">)</span></span></span>',1),Ps=t("p",null,"证明：",-1),Ss=t("p",null,"复杂度：",-1),Ts={class:"katex"},Gs={class:"katex-mathml"},Hs=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mord mathit">o</span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">g</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">p</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right:0.10903em;">N</span><span class="mbin">∗</span><span class="mord mathit">p</span><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mord mathit">o</span><span class="mord mathit" style="margin-right:0.03588em;">g</span><span class="mord mathit">p</span><span class="mclose">)</span></span></span>',1),Js=c(`<p>适用于 a，b 范围大样的情况求解，这题保证 p 为质数因此可以用费马小定理求逆元<br> 在1 \\leq n \\leq 20，1 \\leq b \\leq a \\leq 10^{18}，1 \\leq p \\leq 10^5的范围内可求解</p><blockquote><p>其实是把 10^18 的 a, b 转换成小于 p 的数(10^5)求解，因此 a % p，b % p 小于 p，但是 a / p，b / p 有可能仍然大于 p，因此继续用 lucas 化小</p></blockquote><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> LL<span class="token punctuation">;</span>
<span class="token keyword">int</span> n<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">qmi</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">,</span> <span class="token keyword">int</span> p<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>k<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> res <span class="token operator">=</span> <span class="token punctuation">(</span>LL<span class="token punctuation">)</span>res <span class="token operator">*</span> a <span class="token operator">%</span> p<span class="token punctuation">;</span>
        a <span class="token operator">=</span> <span class="token punctuation">(</span>LL<span class="token punctuation">)</span>a <span class="token operator">*</span> a <span class="token operator">%</span> p<span class="token punctuation">;</span>
        k <span class="token operator">&gt;&gt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">C</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">,</span> <span class="token keyword">int</span> p<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">&gt;</span> a<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> a<span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> b <span class="token punctuation">;</span> j <span class="token operator">++</span><span class="token punctuation">,</span> i <span class="token operator">--</span><span class="token punctuation">)</span>
        res <span class="token operator">=</span> <span class="token punctuation">(</span>LL<span class="token punctuation">)</span>res <span class="token operator">*</span> i <span class="token operator">%</span> p<span class="token punctuation">,</span>
        res <span class="token operator">=</span> <span class="token punctuation">(</span>LL<span class="token punctuation">)</span>res <span class="token operator">*</span> <span class="token function">qmi</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> p <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span> <span class="token operator">%</span> p<span class="token punctuation">;</span>  <span class="token comment">//要乘上逆元，否则会出现除 j 为 0 的情况</span>

    <span class="token keyword">return</span> res<span class="token punctuation">;</span>

<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">lucas</span><span class="token punctuation">(</span>LL a<span class="token punctuation">,</span> LL b<span class="token punctuation">,</span> <span class="token keyword">int</span> p<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&lt;</span> p <span class="token operator">&amp;&amp;</span> b <span class="token operator">&lt;</span> p<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">C</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>LL<span class="token punctuation">)</span><span class="token function">C</span><span class="token punctuation">(</span>a <span class="token operator">%</span> p<span class="token punctuation">,</span> b <span class="token operator">%</span> p<span class="token punctuation">,</span> p<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token function">lucas</span><span class="token punctuation">(</span>a <span class="token operator">/</span> p<span class="token punctuation">,</span> b <span class="token operator">/</span> p<span class="token punctuation">,</span> p<span class="token punctuation">)</span> <span class="token operator">%</span> p<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>n <span class="token operator">--</span> <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        LL a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>
        <span class="token keyword">int</span> p<span class="token punctuation">;</span>
        cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b <span class="token operator">&gt;&gt;</span> p<span class="token punctuation">;</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token function">lucas</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> p<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="杨辉三角" tabindex="-1"><a class="header-anchor" href="#杨辉三角" aria-hidden="true">#</a> 杨辉三角</h2><p>性质：</p>`,5),Qs=t("li",null,"杨辉三角上任意一个数都可以用组合数表示",-1),Us=t("li",null,"杨辉三角上除了外围的数，任意一个数等于它上方左右两数之和",-1),Ws=t("li",null,"杨辉三角是对称的，且半边杨辉三角的斜线有递增的性质，越靠近底，越靠近中间的的数越大",-1),Zs={class:"katex"},sa={class:"katex-mathml"},aa=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.849108em;"></span><span class="strut bottom" style="height:1.132216em;vertical-align:-0.2831079999999999em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.2831079999999999em;margin-left:-0.07153em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span>',1),na={class:"katex"},ea={class:"katex-mathml"},ta=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.849108em;"></span><span class="strut bottom" style="height:1.096108em;vertical-align:-0.247em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.247em;margin-left:-0.07153em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">a</span></span></span><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">b</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span>',1),la=t("code",null,"(a + 1) * a + b + 1",-1),pa=c(`<p>二分求杨辉三角序号</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> LL<span class="token punctuation">;</span>

<span class="token keyword">int</span> n<span class="token punctuation">;</span>

LL <span class="token function">C</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    LL res <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> a<span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> b <span class="token punctuation">;</span> i <span class="token operator">--</span> <span class="token punctuation">,</span> j <span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        res <span class="token operator">=</span> res <span class="token operator">*</span> i <span class="token operator">/</span> j<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">&gt;</span> n<span class="token punctuation">)</span> <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">bool</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    LL l <span class="token operator">=</span> k <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> r <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> <span class="token number">1LL</span> <span class="token operator">*</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> r<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> mid <span class="token operator">=</span> l <span class="token operator">+</span> r <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">C</span><span class="token punctuation">(</span>mid<span class="token punctuation">,</span> k<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> n<span class="token punctuation">)</span> r <span class="token operator">=</span> mid<span class="token punctuation">;</span><span class="token comment">//同一条斜线上只有 C 的底数在变</span>
        <span class="token keyword">else</span> l <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">C</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> k<span class="token punctuation">)</span> <span class="token operator">!=</span> n<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    cout <span class="token operator">&lt;&lt;</span> r <span class="token operator">*</span> <span class="token punctuation">(</span>r <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">+</span> k <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">16</span> <span class="token punctuation">;</span> <span class="token punctuation">;</span> i <span class="token operator">--</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">check</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="排列数" tabindex="-1"><a class="header-anchor" href="#排列数" aria-hidden="true">#</a> 排列数</h2><p>单纯计算排列数的题目较少，计算的方法可以参考组合数<br></p>`,4),ia={class:"katex"},ca={class:"katex-mathml"},oa=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8801079999999999em;"></span><span class="strut bottom" style="height:1.400108em;vertical-align:-0.52em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">A</span><span class="vlist"><span style="top:0.247em;margin-left:0em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">a</span></span></span><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">b</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.34500000000000003em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mopen">(</span><span class="mord mathit">a</span><span class="mbin">−</span><span class="mord mathit">b</span><span class="mclose">)</span><span class="mclose">!</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">a</span><span class="mclose">!</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span>',1),ra=t("blockquote",null,[t("p",null,"因为规定 0! = 1，则 A(0, 0) = 1")],-1),ua=t("ol",null,[t("li",null,"直接求解"),t("li",null,"高精度直接求解"),t("li",null,"预处理求解")],-1),ma=t("h2",{id:"错排公式",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#错排公式","aria-hidden":"true"},"#"),n(" 错排公式")],-1),da=t("code",null,"n",-1),fa=t("strong",null,"若一个排列中所有的元素都不在自己原来的位置上",-1),_a=t("code",null,"n",-1),ka={class:"katex"},ha={class:"katex-mathml"},ya=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span>',1),za={class:"katex"},ga={class:"katex-mathml"},va=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mclose">!</span><span class="mord mathit">n</span></span></span>',1),ba=t("strong",null,"错排问题",-1),xa=t("strong",null,"更列问题",-1),wa=t("h4",{id:"递推求解-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#递推求解-1","aria-hidden":"true"},"#"),n(" 递推求解")],-1),Ca={class:"katex"},La={class:"katex-mathml"},Xa=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mbin">−</span><span class="mord mathrm">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span><span class="mbin">−</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span><span class="mbin">−</span><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mclose">)</span></span></span>',1),Ya=t("br",null,null,-1),qa={class:"katex"},Da={class:"katex-mathml"},Na=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">1</span><span class="mrel">≤</span><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mrel">≤</span><span class="mord mathit">n</span><span class="mbin">−</span><span class="mord mathrm">1</span></span></span>',1),ja=t("br",null,null,-1),Aa={class:"katex"},Ba={class:"katex-mathml"},Oa=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span><span class="mbin">−</span><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span>',1),Fa={class:"katex"},Ea={class:"katex-mathml"},Va=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span><span class="mbin">−</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span>',1),Ia=t("br",null,null,-1),Ra={class:"katex"},$a={class:"katex-mathml"},Ka=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mbin">−</span><span class="mord mathrm">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span><span class="mbin">−</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span><span class="mbin">−</span><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mclose">)</span></span></span>',1),Ma={class:"katex"},Pa={class:"katex-mathml"},Sa=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathrm">0</span><span class="mpunct">,</span><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span>',1),Ta=t("h4",{id:"公式化简",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#公式化简","aria-hidden":"true"},"#"),n(" 公式化简")],-1),Ga={href:"https://zh.wikipedia.org/wiki/%E9%94%99%E6%8E%92%E9%97%AE%E9%A2%98#%E7%AE%80%E5%8C%96%E5%85%AC%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"},Ha={class:"katex"},Ja={class:"katex-mathml"},Qa=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.845108em;"></span><span class="strut bottom" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathit">n</span><span class="mclose">!</span><span class="mopen">(</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span><span class="mclose">!</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mbin">−</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">3</span><span class="mclose">!</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mbin">+</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mbin">+</span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathrm">1</span><span class="mclose"><span class="mclose">)</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span><span class="mclose">!</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mclose">)</span></span></span>',1),Ua={class:"katex"},Wa={class:"katex-mathml"},Za=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8801079999999999em;"></span><span class="strut bottom" style="height:1.2301179999999998em;vertical-align:-0.35001em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="minner textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">⌊</span></span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">e</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">n</span><span class="mclose">!</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mbin">+</span><span class="mord mathrm">0</span><span class="mord mathrm">.</span><span class="mord mathrm">5</span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size1">⌋</span></span></span></span></span>',1),sn=t("h2",{id:"卡塔兰数",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#卡塔兰数","aria-hidden":"true"},"#"),n(" 卡塔兰数")],-1),an=t("p",null,[n("卡塔兰数是"),t("strong",null,"组合数学"),n("中一个常在各种"),t("strong",null,"计数问题"),n("中出现的"),t("strong",null,"数列"),n("。以比利时的数学家欧仁·查理·卡特兰（1814–1894）命名。历史上，清朝数学家明安图（1692 年－1763 年）在其《割圜密率捷法》中最先发明这种计数方式，远远早于卡塔兰。有中国学者建议将此数命名为“明安图数”或“明安图-卡塔兰数”。")],-1),nn={class:"katex"},en={class:"katex-mathml"},tn=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.01em;"></span><span class="strut bottom" style="height:1.53em;vertical-align:-0.52em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.34500000000000003em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mopen">(</span><span class="mord mathit">n</span><span class="mbin">+</span><span class="mord mathrm">1</span><span class="mclose">)</span><span class="mclose">!</span><span class="mord mathit">n</span><span class="mclose">!</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.485em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mopen">(</span><span class="mord mathrm">2</span><span class="mord mathit">n</span><span class="mclose">)</span><span class="mclose">!</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span>',1),ln={class:"katex"},pn={class:"katex-mathml"},cn=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span><span class="mbin">+</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">0</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span><span class="mbin">−</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">0</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span>',1),on={class:"katex"},rn={class:"katex-mathml"},un=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">0</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span>',1),mn=t("h4",{id:"应用",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#应用","aria-hidden":"true"},"#"),n(" 应用")],-1),dn=t("p",null,"组合数学中有非常多的组合结构可以用卡塔兰数来计数。以下用 n=3 和 n=4 举若干例：",-1),fn={class:"katex"},_n={class:"katex-mathml"},kn=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span>',1),hn=t("code",null,"dyck word",-1),yn=t("p",null,"words：",-1),zn={class:"katex-display"},gn={class:"katex"},vn={class:"katex-mathml"},bn=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord mathit" style="margin-right:0.07847em;">X</span><span class="mord mathit" style="margin-right:0.07847em;">X</span><span class="mord mathit" style="margin-right:0.07847em;">X</span><span class="mord mathit" style="margin-right:0.22222em;">Y</span><span class="mord mathit" style="margin-right:0.22222em;">Y</span><span class="mord mathit" style="margin-right:0.22222em;">Y</span><span class="mord mspace"> </span><span class="mord mathit" style="margin-right:0.07847em;">X</span><span class="mord mathit" style="margin-right:0.22222em;">Y</span><span class="mord mathit" style="margin-right:0.07847em;">X</span><span class="mord mathit" style="margin-right:0.07847em;">X</span><span class="mord mathit" style="margin-right:0.22222em;">Y</span><span class="mord mathit" style="margin-right:0.22222em;">Y</span><span class="mord mspace"> </span><span class="mord mathit" style="margin-right:0.07847em;">X</span><span class="mord mathit" style="margin-right:0.22222em;">Y</span><span class="mord mathit" style="margin-right:0.07847em;">X</span><span class="mord mathit" style="margin-right:0.22222em;">Y</span><span class="mord mathit" style="margin-right:0.07847em;">X</span><span class="mord mathit" style="margin-right:0.22222em;">Y</span><span class="mord mspace"> </span><span class="mord mathit" style="margin-right:0.07847em;">X</span><span class="mord mathit" style="margin-right:0.07847em;">X</span><span class="mord mathit" style="margin-right:0.22222em;">Y</span><span class="mord mathit" style="margin-right:0.22222em;">Y</span><span class="mord mathit" style="margin-right:0.07847em;">X</span><span class="mord mathit" style="margin-right:0.22222em;">Y</span><span class="mord mspace"> </span><span class="mord mathit" style="margin-right:0.07847em;">X</span><span class="mord mathit" style="margin-right:0.07847em;">X</span><span class="mord mathit" style="margin-right:0.22222em;">Y</span><span class="mord mathit" style="margin-right:0.07847em;">X</span><span class="mord mathit" style="margin-right:0.22222em;">Y</span><span class="mord mathit" style="margin-right:0.22222em;">Y</span></span></span>',1),xn={class:"katex"},wn={class:"katex-mathml"},Cn=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span>',1),Ln={class:"katex-display"},Xn={class:"katex"},Yn={class:"katex-mathml"},qn=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base displaystyle textstyle uncramped"><span class="mopen">(</span><span class="mopen">(</span><span class="mopen">(</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span><span class="mord mspace"> </span><span class="mopen">(</span><span class="mclose">)</span><span class="mopen">(</span><span class="mopen">(</span><span class="mclose">)</span><span class="mclose">)</span><span class="mord mspace"> </span><span class="mopen">(</span><span class="mclose">)</span><span class="mopen">(</span><span class="mclose">)</span><span class="mopen">(</span><span class="mclose">)</span><span class="mord mspace"> </span><span class="mopen">(</span><span class="mopen">(</span><span class="mclose">)</span><span class="mclose">)</span><span class="mopen">(</span><span class="mclose">)</span><span class="mord mspace"> </span><span class="mopen">(</span><span class="mopen">(</span><span class="mclose">)</span><span class="mopen">(</span><span class="mclose">)</span><span class="mclose">)</span></span></span>',1),Dn={class:"katex"},Nn={class:"katex-mathml"},jn=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span>',1),An=t("em",null,"n",-1),Bn=t("h2",{id:"组合记数",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#组合记数","aria-hidden":"true"},"#"),n(" 组合记数")],-1),On=t("p",null,"组合计数理论是组合数学中一个最基本的研究方向，主要研究满足一定条件的安排方式的数目及其计数问题。本课程主要介绍组合数学中常见的和重要的一些计数原理、计数方法和计数公式，包括一般的排列、组合的计算以及生成函数、容斥原理、反演原理、Polya 计数定理等等，是研究组合数学的初步。",-1),Fn=t("h2",{id:"递推",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#递推","aria-hidden":"true"},"#"),n(" 递推")],-1),En=t("p",null,"递推关系（英语：Recurrence relation），在数学上也就是差分方程（Difference equation），是一种递推地定义一个序列的方程：序列的每一项目是定义为前若干项的函数。",-1),Vn=t("p",null,"像斐波那契数即为递推关系",-1),In={class:"katex"},Rn={class:"katex-mathml"},$n=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.58333em;"></span><span class="strut bottom" style="height:0.791661em;vertical-align:-0.208331em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span><span class="mbin">+</span><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span><span class="mbin">+</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span>',1),Kn=t("p",null,"某些简单定义的递推关系式可能会表现出非常复杂的（混沌的）性质，他们属于数学中的非线性分析领域。",-1),Mn=t("p",null,"所谓解一个递推关系式，也就是求其解析解，即关于 n 的非递归函数。",-1),Pn=t("h3",{id:"常见的递推",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#常见的递推","aria-hidden":"true"},"#"),n(" 常见的递推")],-1),Sn={class:"katex"},Tn={class:"katex-mathml"},Gn=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">a</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span><span class="mbin">+</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord"><span class="mord mathit">a</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span>',1),Hn={class:"katex"},Jn={class:"katex-mathml"},Qn=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">a</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span><span class="mbin">+</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mord"><span class="mord mathit">a</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span>',1),Un=t("br",null,null,-1),Wn={class:"katex"},Zn={class:"katex-mathml"},se=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span><span class="mclose">!</span><span class="mrel">=</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mbin">−</span><span class="mord mathrm">1</span><span class="mclose">)</span><span class="mclose">!</span></span></span>',1),ae=t("br",null,null,-1),ne={class:"katex"},ee={class:"katex-mathml"},te=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">0</span><span class="mclose">!</span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span>',1),le=t("br",null,null,-1),pe={class:"katex"},ie={class:"katex-mathml"},ce=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span>',1),oe=t("br",null,null,-1),re={class:"katex"},ue={class:"katex-mathml"},me=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mopen">(</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mclose"><span class="mclose">)</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">−</span><span class="mord mathrm">2</span></span></span>',1),de=t("br",null,null,-1),fe={class:"katex"},_e={class:"katex-mathml"},ke=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.58333em;"></span><span class="strut bottom" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">3</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">∗</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">−</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span>',1),he=t("br",null,null,-1),ye={class:"katex"},ze={class:"katex-mathml"},ge=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">4</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mopen">(</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mclose"><span class="mclose">)</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">−</span><span class="mord mathrm">2</span></span></span>',1),ve=t("br",null,null,-1),be=t("br",null,null,-1),xe={class:"katex"},we={class:"katex-mathml"},Ce=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mopen">(</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mclose"><span class="mclose">)</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">−</span><span class="mord mathrm">2</span></span></span>',1),Le=t("br",null,null,-1),Xe={class:"katex"},Ye={class:"katex-mathml"},qe=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.58333em;"></span><span class="strut bottom" style="height:0.791661em;vertical-align:-0.208331em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mbin">+</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">∗</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mbin">+</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">−</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span>',1),De=t("br",null,null,-1),Ne={class:"katex"},je={class:"katex-mathml"},Ae=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">F</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">0</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathrm">0</span></span></span>',1),Be=t("br",null,null,-1),Oe={class:"katex"},Fe={class:"katex-mathml"},Ee=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">F</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span>',1),Ve=t("br",null,null,-1),Ie={class:"katex"},Re={class:"katex-mathml"},$e=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">F</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">F</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span><span class="mbin">−</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">F</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span><span class="mbin">−</span><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span>',1),Ke=t("br",null,null,-1),Me=t("li",null,"解线性递推",-1),Pe=t("li",null,"常系数线性齐次递推",-1),Se=c('<h2 id="鸽剿原理" tabindex="-1"><a class="header-anchor" href="#鸽剿原理" aria-hidden="true">#</a> 鸽剿原理</h2><p>鸽巢原理，又名狄利克雷抽屉原理、鸽笼原理。</p><p>其中一种简单的表述法为：</p><p>若有 n 个笼子和 n+1 只鸽子，所有的鸽子都被关在鸽笼里，那么至少有一个笼子有至少 2 只鸽子。</p><p>另一种为：</p><p>若有 n 个笼子和 kn+1 只鸽子，所有的鸽子都被关在鸽笼里，那么至少有一个笼子有至少 k+1 只鸽子。</p><p>集合论的表述如下：</p><p>若 A 是 n+1 元集，B 是 n 元集，则不存在从 A 到 B 的单射。 拉姆齐定理是此原理的推广。</p><h3 id="推广" tabindex="-1"><a class="header-anchor" href="#推广" aria-hidden="true">#</a> 推广</h3>',9),Te={class:"katex"},Ge={class:"katex-mathml"},He=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.15em;"></span><span class="strut bottom" style="height:1.8359999999999999em;vertical-align:-0.686em;"></span><span class="base textstyle uncramped"><span class="reset-textstyle displaystyle textstyle uncramped"><span class="minner displaystyle textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">⌈</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.686em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord mathit">m</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">⌉</span></span></span></span></span></span>',1),Je=t("blockquote",null,[t("p",null,"鸽巢原理经常在计算机领域得到真正的应用。比如：哈希表的重复问题（冲突）是不可避免的，因为 Keys 的数目总是比 Indices 的数目多，不管是多么高明的算法都不可能解决这个问题。这个原理，还证明任何无损压缩算法，在把一些输入变小的同时，作为代价一定有其他的输入增大，否则对于长度为 L 的输入集合，该压缩算法总能将其映射到一个更小的长度小于 L 的输出集合，而这与鸽巢理论相悖。")],-1),Qe=t("h2",{id:"容斥原理",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#容斥原理","aria-hidden":"true"},"#"),n(" 容斥原理")],-1),Ue=t("p",null,[n("在计数时，必须注意没有重复，没有遗漏。为了"),t("strong",null,"使重叠部分不被重复计算"),n("，人们研究出一种新的计数方法，这种方法的基本思想是：先不考虑重叠的情况，把包含于某内容中的所有对象的数目先计算出来，然后再把计数时重复计算的数目排斥出去，使得计算的结果既无遗漏又无重复，这种计数的方法称为容斥原理。")],-1),We={class:"katex"},Ze={class:"katex-mathml"},st=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">∣</span><span class="mord mathit">A</span><span class="mbin">∪</span><span class="mord mathit" style="margin-right:0.05017em;">B</span><span class="mbin">∪</span><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="mord mathrm">∣</span><span class="mrel">=</span><span class="mord mathrm">∣</span><span class="mord mathit">A</span><span class="mord mathrm">∣</span><span class="mbin">+</span><span class="mord mathrm">∣</span><span class="mord mathit" style="margin-right:0.05017em;">B</span><span class="mord mathrm">∣</span><span class="mbin">+</span><span class="mord mathrm">∣</span><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="mord mathrm">∣</span><span class="mbin">−</span><span class="mord mathrm">∣</span><span class="mord mathit">A</span><span class="mbin">∩</span><span class="mord mathit" style="margin-right:0.05017em;">B</span><span class="mord mathrm">∣</span><span class="mbin">−</span><span class="mord mathrm">∣</span><span class="mord mathit" style="margin-right:0.05017em;">B</span><span class="mbin">∩</span><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="mord mathrm">∣</span><span class="mbin">−</span><span class="mord mathrm">∣</span><span class="mord mathit">A</span><span class="mbin">∩</span><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="mord mathrm">∣</span><span class="mbin">+</span><span class="mord mathrm">∣</span><span class="mord mathit">A</span><span class="mbin">∩</span><span class="mord mathit" style="margin-right:0.05017em;">B</span><span class="mbin">∩</span><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="mord mathrm">∣</span></span></span>',1),at=c("<p>例题： 分母是 1001 的最简分数一共有多少个？<br> 分析：这一题实际上就是找分子中不能与 1001 进行约分的数。由于 1001=7×11×13，所以就是找不能被 7，11，13 整除的数。<br></p><p>解答：</p><ol><li><code>1001 / 7 = 143; 1001 / 11 = 91; 1001 / 13 = 77;</code> <br></li><li><code>1001 / (7 * 11) = 13; 1001 / (7 * 13) = 11; 1001 / (11 * 13) = 7</code></li><li><code>1001 / (7 * 11 * 13) = 1</code></li></ol><p>则能被 7，11，13 整除的数共有(143 + 91 + 77) - (13 + 11 + 7) + 1 = 281 个</p><p>不能被其整除的数共有 1001 - 281 = 721 个</p>",5);function nt(et,tt){const e=f("mi"),d=f("msubsup"),l=f("mo"),p=f("mrow"),_=f("mfrac"),r=f("annotation"),u=f("semantics"),m=f("math"),i=f("mn"),o=f("msub"),k=f("msup"),h=f("mtext"),y=f("ExternalLinkIcon"),z=f("mstyle");return v(),b("div",null,[w,C,t("p",null,[n("直接求解 组合数公式： "),t("span",L,[t("span",X,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(d,null,{default:a(()=>[s(e,null,{default:a(()=>[n("C")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(e,null,{default:a(()=>[n("m")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(_,null,{default:a(()=>[s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1})]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("m")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(e,null,{default:a(()=>[n("m")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1})]),_:1})]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("C_n^m = \\frac{n!}{m!(n - m)!}")]),_:1})]),_:1})]),_:1})]),Y])]),q,t("ul",null,[t("li",null,[n("时间："),t("span",D,[t("span",N,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("O")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("m")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("O(m)")]),_:1})]),_:1})]),_:1})]),j])])]),A,t("p",null,[n("由分解质因数部分可知，任何一个合数"),B,n("都可以写成"),t("span",O,[t("span",F,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("N")]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(d,null,{default:a(()=>[s(e,null,{default:a(()=>[n("p")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1}),s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("a")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1})]),_:1})]),_:1}),s(d,null,{default:a(()=>[s(e,null,{default:a(()=>[n("p")]),_:1}),s(i,null,{default:a(()=>[n("2")]),_:1}),s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("a")]),_:1}),s(i,null,{default:a(()=>[n("2")]),_:1})]),_:1})]),_:1})]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n(".")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n(".")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n(".")]),_:1}),s(d,null,{default:a(()=>[s(e,null,{default:a(()=>[n("p")]),_:1}),s(e,null,{default:a(()=>[n("k")]),_:1}),s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("a")]),_:1}),s(e,null,{default:a(()=>[n("k")]),_:1})]),_:1})]),_:1})]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("N = p_1^{a_1}p_2^{a_2}...p_k^{a_k}")]),_:1})]),_:1})]),_:1})]),E]),n("，即若干个质数的若干次幂的积")]),t("p",null,[n("又由阶乘部分可知，阶乘中质因数的指数："),t("span",V,[t("span",I,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("c")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("t")]),_:1}),s(e,null,{default:a(()=>[n("p")]),_:1})]),_:1}),s(e,null,{default:a(()=>[n("m")]),_:1}),s(e,null,{default:a(()=>[n("i")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(p,null,{default:a(()=>[s(l,{fence:"true"},{default:a(()=>[n("⌊")]),_:1}),s(_,null,{default:a(()=>[s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("a")]),_:1})]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("p")]),_:1})]),_:1})]),_:1}),s(l,{fence:"true"},{default:a(()=>[n("⌋")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(p,null,{default:a(()=>[s(l,{fence:"true"},{default:a(()=>[n("⌊")]),_:1}),s(_,null,{default:a(()=>[s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("a")]),_:1})]),_:1}),s(p,null,{default:a(()=>[s(k,null,{default:a(()=>[s(e,null,{default:a(()=>[n("p")]),_:1}),s(i,null,{default:a(()=>[n("2")]),_:1})]),_:1})]),_:1})]),_:1}),s(l,{fence:"true"},{default:a(()=>[n("⌋")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n(".")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n(".")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n(".")]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(p,null,{default:a(()=>[s(l,{fence:"true"},{default:a(()=>[n("⌊")]),_:1}),s(_,null,{default:a(()=>[s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("a")]),_:1})]),_:1}),s(p,null,{default:a(()=>[s(k,null,{default:a(()=>[s(e,null,{default:a(()=>[n("p")]),_:1}),s(e,null,{default:a(()=>[n("k")]),_:1})]),_:1})]),_:1})]),_:1}),s(l,{fence:"true"},{default:a(()=>[n("⌋")]),_:1})]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("cnt_pmi(a!)= \\left\\lfloor\\frac{a}{p}\\right\\rfloor + \\left\\lfloor\\frac{a}{p^2}\\right\\rfloor + ... + \\left\\lfloor\\frac{a}{p^k}\\right\\rfloor")]),_:1})]),_:1})]),_:1})]),R]),n(),$]),K,t("p",null,[n("然后分别求出各个质数的"),t("span",M,[t("span",P,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("c")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("t")]),_:1}),s(e,null,{default:a(()=>[n("p")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(e,null,{default:a(()=>[n("m")]),_:1}),s(e,null,{default:a(()=>[n("i")]),_:1}),s(l,{separator:"true"},{default:a(()=>[n(",")]),_:1}),s(e,null,{default:a(()=>[n("c")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("t")]),_:1}),s(e,null,{default:a(()=>[n("p")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("b")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(e,null,{default:a(()=>[n("m")]),_:1}),s(e,null,{default:a(()=>[n("i")]),_:1}),s(l,{separator:"true"},{default:a(()=>[n(",")]),_:1}),s(e,null,{default:a(()=>[n("c")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("t")]),_:1}),s(e,null,{default:a(()=>[n("p")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(e,null,{default:a(()=>[n("b")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(e,null,{default:a(()=>[n("m")]),_:1}),s(e,null,{default:a(()=>[n("i")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("cnt_p(a!)mi, cnt_p(b!)mi, cnt_p(( a - b )!)mi")]),_:1})]),_:1})]),_:1})]),S])]),t("p",null,[n("根据组合数公式： "),t("span",T,[t("span",G,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(d,null,{default:a(()=>[s(e,null,{default:a(()=>[n("C")]),_:1}),s(e,null,{default:a(()=>[n("a")]),_:1}),s(e,null,{default:a(()=>[n("b")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(_,null,{default:a(()=>[s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1})]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("b")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(e,null,{default:a(()=>[n("b")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1})]),_:1})]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("C_a^b = \\frac{a!}{b!(a - b)!}")]),_:1})]),_:1})]),_:1})]),H]),n(" 算出所有质数的指数，即"),t("span",J,[t("span",Q,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("k")]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(e,null,{default:a(()=>[n("c")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("t")]),_:1}),s(e,null,{default:a(()=>[n("p")]),_:1})]),_:1}),s(e,null,{default:a(()=>[n("m")]),_:1}),s(e,null,{default:a(()=>[n("i")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(e,null,{default:a(()=>[n("c")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("t")]),_:1}),s(e,null,{default:a(()=>[n("p")]),_:1})]),_:1}),s(e,null,{default:a(()=>[n("m")]),_:1}),s(e,null,{default:a(()=>[n("i")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("b")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(e,null,{default:a(()=>[n("c")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("t")]),_:1}),s(e,null,{default:a(()=>[n("p")]),_:1})]),_:1}),s(e,null,{default:a(()=>[n("m")]),_:1}),s(e,null,{default:a(()=>[n("i")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(e,null,{default:a(()=>[n("b")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("k = cnt_pmi(a!) - cnt_pmi(b!) - cnt_pmi((a - b)!)")]),_:1})]),_:1})]),_:1})]),U])]),W,t("p",null,[n("递推公式："),t("span",Z,[t("span",ss,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(d,null,{default:a(()=>[s(e,null,{default:a(()=>[n("C")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(e,null,{default:a(()=>[n("m")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(d,null,{default:a(()=>[s(e,null,{default:a(()=>[n("C")]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1}),s(e,null,{default:a(()=>[n("m")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(d,null,{default:a(()=>[s(e,null,{default:a(()=>[n("C")]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("m")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1})]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("C_n^m = C_{n-1}^m + C_{n-1}^{m-1}")]),_:1})]),_:1})]),_:1})]),as])]),ns,es,t("ul",null,[t("li",null,[n("时间："),t("span",ts,[t("span",ls,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("O")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(k,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1}),s(i,null,{default:a(()=>[n("2")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("O(n^2)")]),_:1})]),_:1})]),_:1})]),ps])]),t("li",null,[n("空间："),t("span",is,[t("span",cs,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("O")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(k,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1}),s(i,null,{default:a(()=>[n("2")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("O(n^2)")]),_:1})]),_:1})]),_:1})]),os])])]),rs,us,t("p",null,[n("在"),t("span",ms,[t("span",ds,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(i,null,{default:a(()=>[n("1")]),_:1}),s(l,null,{default:a(()=>[n("≤")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("≤")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1}),s(k,null,{default:a(()=>[s(i,null,{default:a(()=>[n("0")]),_:1}),s(i,null,{default:a(()=>[n("5")]),_:1})]),_:1}),s(l,{separator:"true"},{default:a(()=>[n(",")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1}),s(l,null,{default:a(()=>[n("≤")]),_:1}),s(e,null,{default:a(()=>[n("b")]),_:1}),s(l,null,{default:a(()=>[n("≤")]),_:1}),s(e,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("≤")]),_:1}),s(i,null,{default:a(()=>[n("2")]),_:1}),s(i,null,{default:a(()=>[n("0")]),_:1}),s(i,null,{default:a(()=>[n("0")]),_:1}),s(i,null,{default:a(()=>[n("0")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("1 \\leq n \\leq 10^5, 1 \\leq b \\leq a \\leq 2000")]),_:1})]),_:1})]),_:1})]),fs]),n("的范围内可求解")]),_s,t("p",null,[n("使用公式求解"),t("span",ks,[t("span",hs,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(d,null,{default:a(()=>[s(e,null,{default:a(()=>[n("C")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(e,null,{default:a(()=>[n("m")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(_,null,{default:a(()=>[s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1})]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("m")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(e,null,{default:a(()=>[n("m")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1})]),_:1})]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("C_n^m = \\frac {n! }{m!(n - m)! }")]),_:1})]),_:1})]),_:1})]),ys]),zs,n(" 可以先预处理出 fact(n) , infact(m) , infact(n - m)，infact(x)表示 x!的逆元"),gs,n(" 则$C_n^m = fact(n) _ infact(m) _ infact( n - m ) $ "),vs]),bs,xs,t("ul",null,[t("li",null,[n("时间："),t("span",ws,[t("span",Cs,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("O")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(e,null,{default:a(()=>[n("l")]),_:1}),s(e,null,{default:a(()=>[n("o")]),_:1}),s(e,null,{default:a(()=>[n("g")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("O(nlogn)")]),_:1})]),_:1})]),_:1})]),Ls])])]),t("p",null,[n("在"),t("span",Xs,[t("span",Ys,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(i,null,{default:a(()=>[n("1")]),_:1}),s(l,null,{default:a(()=>[n("≤")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("≤")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1}),s(k,null,{default:a(()=>[s(i,null,{default:a(()=>[n("0")]),_:1}),s(i,null,{default:a(()=>[n("4")]),_:1})]),_:1}),s(l,{separator:"true"},{default:a(()=>[n(",")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1}),s(l,null,{default:a(()=>[n("≤")]),_:1}),s(e,null,{default:a(()=>[n("b")]),_:1}),s(l,null,{default:a(()=>[n("≤")]),_:1}),s(e,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("≤")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1}),s(k,null,{default:a(()=>[s(i,null,{default:a(()=>[n("0")]),_:1}),s(i,null,{default:a(()=>[n("5")]),_:1})]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("1 \\leq n \\leq 10^4, 1 \\leq b \\leq a \\leq 10^5")]),_:1})]),_:1})]),_:1})]),qs]),n("的范围内可求解")]),Ds,t("p",null,[n("求阶乘的逆元使用费马小定理或扩展欧几里得的时间复杂度都为"),t("span",Ns,[t("span",js,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("O")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(e,null,{default:a(()=>[n("l")]),_:1}),s(e,null,{default:a(()=>[n("o")]),_:1}),s(e,null,{default:a(()=>[n("g")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("O(nlogn)")]),_:1})]),_:1})]),_:1})]),As]),n("。事实上，可以先求出最后一个阶乘的逆元，再根据"),t("span",Bs,[t("span",Os,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("i")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(e,null,{default:a(()=>[n("f")]),_:1}),s(e,null,{default:a(()=>[n("a")]),_:1}),s(e,null,{default:a(()=>[n("c")]),_:1}),s(e,null,{default:a(()=>[n("t")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(e,null,{default:a(()=>[n("i")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(e,null,{default:a(()=>[n("f")]),_:1}),s(e,null,{default:a(()=>[n("a")]),_:1}),s(e,null,{default:a(()=>[n("c")]),_:1}),s(e,null,{default:a(()=>[n("t")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n("∗")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("infact(n - 1) = infact(n) * n")]),_:1})]),_:1})]),_:1})]),Fs]),n("线性递推出所有阶乘的逆元，使得预处理时间复杂度近似于"),t("span",Es,[t("span",Vs,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("O")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("O(n)")]),_:1})]),_:1})]),_:1})]),Is])]),Rs,t("p",null,[n("定理："),t("span",$s,[t("span",Ks,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(d,null,{default:a(()=>[s(e,null,{default:a(()=>[n("C")]),_:1}),s(e,null,{default:a(()=>[n("a")]),_:1}),s(e,null,{default:a(()=>[n("b")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("≡")]),_:1}),s(d,null,{default:a(()=>[s(e,null,{default:a(()=>[n("C")]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("a")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n("%")]),_:1}),s(e,null,{default:a(()=>[n("p")]),_:1})]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("b")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n("%")]),_:1}),s(e,null,{default:a(()=>[n("p")]),_:1})]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("∗")]),_:1}),s(d,null,{default:a(()=>[s(e,null,{default:a(()=>[n("C")]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("a")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n("/")]),_:1}),s(e,null,{default:a(()=>[n("p")]),_:1})]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("b")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n("/")]),_:1}),s(e,null,{default:a(()=>[n("p")]),_:1})]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("m")]),_:1}),s(e,null,{default:a(()=>[n("o")]),_:1}),s(e,null,{default:a(()=>[n("d")]),_:1}),s(h,null,{default:a(()=>[n(" ")]),_:1}),s(e,null,{default:a(()=>[n("p")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("C^b_a \\equiv C_{a\\%p}^{b\\%p} * C_{a/p}^{b/p}(mod \\space p)")]),_:1})]),_:1})]),_:1})]),Ms])]),Ps,Ss,t("ul",null,[t("li",null,[n("时间："),t("span",Ts,[t("span",Gs,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("O")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("l")]),_:1}),s(e,null,{default:a(()=>[n("o")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("g")]),_:1}),s(e,null,{default:a(()=>[n("p")]),_:1})]),_:1}),s(e,null,{default:a(()=>[n("N")]),_:1}),s(l,null,{default:a(()=>[n("∗")]),_:1}),s(e,null,{default:a(()=>[n("p")]),_:1}),s(e,null,{default:a(()=>[n("l")]),_:1}),s(e,null,{default:a(()=>[n("o")]),_:1}),s(e,null,{default:a(()=>[n("g")]),_:1}),s(e,null,{default:a(()=>[n("p")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("O(log_pN * plogp)")]),_:1})]),_:1})]),_:1})]),Hs])])]),Js,t("ul",null,[Qs,Us,Ws,t("li",null,[n("杨辉三角正中间的数为"),t("span",Zs,[t("span",sa,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(d,null,{default:a(()=>[s(e,null,{default:a(()=>[n("C")]),_:1}),s(p,null,{default:a(()=>[s(i,null,{default:a(()=>[n("2")]),_:1}),s(e,null,{default:a(()=>[n("k")]),_:1})]),_:1}),s(e,null,{default:a(()=>[n("k")]),_:1})]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("C_{2k}^k")]),_:1})]),_:1})]),_:1})]),aa])]),t("li",null,[n("杨辉三角上任意一个数的序号，可以由它的组合数得到，若该数为"),t("span",na,[t("span",ea,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(d,null,{default:a(()=>[s(e,null,{default:a(()=>[n("C")]),_:1}),s(e,null,{default:a(()=>[n("a")]),_:1}),s(e,null,{default:a(()=>[n("b")]),_:1})]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("C_a^b")]),_:1})]),_:1})]),_:1})]),ta]),n("，则该数的序号为"),la,n("（从 1 开始）")])]),pa,t("p",null,[n("排列数公式："),t("span",ia,[t("span",ca,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(d,null,{default:a(()=>[s(e,null,{default:a(()=>[n("A")]),_:1}),s(e,null,{default:a(()=>[n("a")]),_:1}),s(e,null,{default:a(()=>[n("b")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(_,null,{default:a(()=>[s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1})]),_:1}),s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(e,null,{default:a(()=>[n("b")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1})]),_:1})]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("A_a^b = \\frac{a!}{ ( a - b )! }")]),_:1})]),_:1})]),_:1})]),oa])]),ra,ua,ma,t("p",null,[n("错排问题是组合数学中的问题之一。考虑一个有"),da,n("个元素的排列，"),fa,n("，那么这样的排列就称为原排列的一个错排。"),_a,n("个元素的错排数记为"),t("span",ka,[t("span",ha,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("D")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1})]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("D_n")]),_:1})]),_:1})]),_:1})]),ya]),n("或"),t("span",za,[t("span",ga,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("!")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("!n")]),_:1})]),_:1})]),_:1})]),va]),n("。 研究一个排列错排个数的问题，叫做"),ba,n("或称为"),xa]),wa,t("ul",null,[t("li",null,[n("递推公式： "),t("span",Ca,[t("span",La,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("D")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("D")]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("D")]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("2")]),_:1})]),_:1})]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("D_n = (n - 1)(D_{n - 1} + D_{n - 2} )")]),_:1})]),_:1})]),_:1})]),Xa]),Ya,n(" 表示将 n 个东西进行错排的方案数 "),t("blockquote",null,[t("p",null,[n("假设有 n 个数错排，先把第 n 个数放到第 k 个数的位置，k 的可取 n - 1 个("),t("span",qa,[t("span",Da,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(i,null,{default:a(()=>[n("1")]),_:1}),s(l,null,{default:a(()=>[n("≤")]),_:1}),s(e,null,{default:a(()=>[n("k")]),_:1}),s(l,null,{default:a(()=>[n("≤")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("1 \\leq k \\leq n - 1")]),_:1})]),_:1})]),_:1})]),Na]),n(")，这样完成第一个数的错位"),ja,n(" 接着分为两种情况：")]),t("ol",null,[t("li",null,[n("第 k 个数放在空出来的第 n 位置，这时还剩余 n - 2 个数进行错排，即"),t("span",Aa,[t("span",Ba,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("D")]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("2")]),_:1})]),_:1})]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("D_{n - 2}")]),_:1})]),_:1})]),_:1})]),Oa])]),t("li",null,[n("第 k 个数不放在第 n 位置，此时相当第 n 个位置为 k 的原本位置，则包含 k 在内的 n - 1 个数进行错排，即"),t("span",Fa,[t("span",Ea,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("D")]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1})]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("D_{n - 1}")]),_:1})]),_:1})]),_:1})]),Va]),Ia])]),t("p",null,[n("可得："),t("span",Ra,[t("span",$a,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("D")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("D")]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("D")]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("2")]),_:1})]),_:1})]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("D_n = (n - 1)(D_{n - 1} + D_{n - 2})")]),_:1})]),_:1})]),_:1})]),Ka])])])])]),t("blockquote",null,[t("p",null,[n("特别地，由公式的定义可知道"),t("span",Ma,[t("span",Pa,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("D")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(i,null,{default:a(()=>[n("0")]),_:1}),s(l,{separator:"true"},{default:a(()=>[n(",")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("D")]),_:1}),s(i,null,{default:a(()=>[n("2")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("D_1=0, D_2 = 1")]),_:1})]),_:1})]),_:1})]),Sa])])]),Ta,t("p",null,[n("推导及化简过程："),t("a",Ga,[n("点击跳转"),s(y)])]),t("p",null,[n("公式："),t("span",Ha,[t("span",Ja,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("D")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(_,null,{default:a(()=>[s(p,null,{default:a(()=>[s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1}),s(p,null,{default:a(()=>[s(i,null,{default:a(()=>[n("2")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1})]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(_,null,{default:a(()=>[s(p,null,{default:a(()=>[s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1}),s(p,null,{default:a(()=>[s(i,null,{default:a(()=>[n("3")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1})]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n(".")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n(".")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n(".")]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1}),s(k,null,{default:a(()=>[s(l,null,{default:a(()=>[n(")")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1})]),_:1}),s(_,null,{default:a(()=>[s(p,null,{default:a(()=>[s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1})]),_:1})]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("D_n = n!(\\frac{1}{2!} - \\frac{1}{3!} + ... + (-1)^n\\frac{1}{n!})")]),_:1})]),_:1})]),_:1})]),Qa])]),t("p",null,[n("化简："),t("span",Ua,[t("span",Wa,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("D")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(p,null,{default:a(()=>[s(l,{fence:"true"},{default:a(()=>[n("⌊")]),_:1}),s(_,null,{default:a(()=>[s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1})]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("e")]),_:1})]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(i,null,{default:a(()=>[n("0")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n(".")]),_:1}),s(i,null,{default:a(()=>[n("5")]),_:1}),s(l,{fence:"true"},{default:a(()=>[n("⌋")]),_:1})]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("D_n = \\left\\lfloor \\frac{n!}{e} + 0.5 \\right\\rfloor")]),_:1})]),_:1})]),_:1})]),Za])]),sn,an,t("p",null,[n("卡塔兰数的一般项公式为："),t("span",nn,[t("span",en,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("C")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(_,null,{default:a(()=>[s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("(")]),_:1}),s(i,null,{default:a(()=>[n("2")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1})]),_:1}),s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1})]),_:1})]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("C_n = \\frac{(2n)!}{(n + 1)!n!}")]),_:1})]),_:1})]),_:1})]),tn])]),t("p",null,[n("递推关系公式："),t("span",ln,[t("span",pn,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("C")]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("C")]),_:1}),s(i,null,{default:a(()=>[n("0")]),_:1})]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("C")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("C")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("C")]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n(".")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n(".")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n(".")]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("C")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1})]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("C")]),_:1}),s(i,null,{default:a(()=>[n("0")]),_:1})]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("C_{n+1} = C_0C_n + C_1C_{n-1} + ... + C_nC_0")]),_:1})]),_:1})]),_:1})]),cn])]),t("blockquote",null,[t("p",null,[n("特别的 "),t("span",on,[t("span",rn,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("C")]),_:1}),s(i,null,{default:a(()=>[n("0")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("C_0 = 1")]),_:1})]),_:1})]),_:1})]),un])])]),mn,dn,t("ul",null,[t("li",null,[t("span",fn,[t("span",_n,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("C")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1})]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("C_n")]),_:1})]),_:1})]),_:1})]),kn]),n("表示长度 2n 的"),hn,n("的个数。Dyck 词是一个有 n 个 X 和 n 个 Y 组成的字串，且所有的前缀字符串皆满足 X 的个数大于等于 Y 的个数。以下为长度为 6 的 dyck")])]),yn,t("p",null,[t("span",zn,[t("span",gn,[t("span",vn,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("X")]),_:1}),s(e,null,{default:a(()=>[n("X")]),_:1}),s(e,null,{default:a(()=>[n("X")]),_:1}),s(e,null,{default:a(()=>[n("Y")]),_:1}),s(e,null,{default:a(()=>[n("Y")]),_:1}),s(e,null,{default:a(()=>[n("Y")]),_:1}),s(h,null,{default:a(()=>[n(" ")]),_:1}),s(e,null,{default:a(()=>[n("X")]),_:1}),s(e,null,{default:a(()=>[n("Y")]),_:1}),s(e,null,{default:a(()=>[n("X")]),_:1}),s(e,null,{default:a(()=>[n("X")]),_:1}),s(e,null,{default:a(()=>[n("Y")]),_:1}),s(e,null,{default:a(()=>[n("Y")]),_:1}),s(h,null,{default:a(()=>[n(" ")]),_:1}),s(e,null,{default:a(()=>[n("X")]),_:1}),s(e,null,{default:a(()=>[n("Y")]),_:1}),s(e,null,{default:a(()=>[n("X")]),_:1}),s(e,null,{default:a(()=>[n("Y")]),_:1}),s(e,null,{default:a(()=>[n("X")]),_:1}),s(e,null,{default:a(()=>[n("Y")]),_:1}),s(h,null,{default:a(()=>[n(" ")]),_:1}),s(e,null,{default:a(()=>[n("X")]),_:1}),s(e,null,{default:a(()=>[n("X")]),_:1}),s(e,null,{default:a(()=>[n("Y")]),_:1}),s(e,null,{default:a(()=>[n("Y")]),_:1}),s(e,null,{default:a(()=>[n("X")]),_:1}),s(e,null,{default:a(()=>[n("Y")]),_:1}),s(h,null,{default:a(()=>[n(" ")]),_:1}),s(e,null,{default:a(()=>[n("X")]),_:1}),s(e,null,{default:a(()=>[n("X")]),_:1}),s(e,null,{default:a(()=>[n("Y")]),_:1}),s(e,null,{default:a(()=>[n("X")]),_:1}),s(e,null,{default:a(()=>[n("Y")]),_:1}),s(e,null,{default:a(()=>[n("Y")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("XXXYYY\\space XYXXYY\\space XYXYXY\\space XXYYXY\\space XXYXYY ")]),_:1})]),_:1})]),_:1})]),bn])])]),t("ul",null,[t("li",null,[n("将上例的 X 换成左括号，Y 换成右括号，"),t("span",xn,[t("span",wn,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("C")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1})]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("C_n")]),_:1})]),_:1})]),_:1})]),Cn]),n("表示所有包含 n 组括号的合法运算式的个数：")])]),t("p",null,[t("span",Ln,[t("span",Xn,[t("span",Yn,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(l,null,{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(h,null,{default:a(()=>[n(" ")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(h,null,{default:a(()=>[n(" ")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(h,null,{default:a(()=>[n(" ")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(h,null,{default:a(()=>[n(" ")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("((()))\\space ()(())\\space ()()()\\space (())()\\space (()()) ")]),_:1})]),_:1})]),_:1})]),qn])])]),t("ul",null,[t("li",null,[t("span",Dn,[t("span",Nn,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("C")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1})]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("C_n")]),_:1})]),_:1})]),_:1})]),jn]),n("表示有"),An,n("个节点组成不同二叉数的方案数。")])]),Bn,On,Fn,En,Vn,t("p",null,[t("span",In,[t("span",Rn,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("x")]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(i,null,{default:a(()=>[n("2")]),_:1})]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("x")]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("x")]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1})]),_:1})]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("x_{n+2}=x_{n+1}+x_{n}")]),_:1})]),_:1})]),_:1})]),$n])]),Kn,Mn,Pn,t("ul",null,[t("li",null,[n("等差数列 "),t("blockquote",null,[t("p",null,[t("span",Sn,[t("span",Tn,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("a")]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("a")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(e,null,{default:a(()=>[n("k")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("a_{n+1}=a_n + k")]),_:1})]),_:1})]),_:1})]),Gn])])])]),t("li",null,[n("等比数列 "),t("blockquote",null,[t("p",null,[t("span",Hn,[t("span",Jn,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("a")]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(e,null,{default:a(()=>[n("k")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("a")]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1})]),_:1})]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("a_{n+1}=ka_{n}")]),_:1})]),_:1})]),_:1})]),Qn]),Un])])]),t("li",null,[n("阶乘 "),t("blockquote",null,[t("p",null,[t("span",Wn,[t("span",Zn,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1}),s(l,null,{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("n! = (n-1)!")]),_:1})]),_:1})]),_:1})]),se]),ae,n(" 特别的 "),t("span",ne,[t("span",ee,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(i,null,{default:a(()=>[n("0")]),_:1}),s(l,null,{default:a(()=>[n("!")]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("0! = 1")]),_:1})]),_:1})]),_:1})]),te])])])]),t("li",null,[n("倒数和 "),t("blockquote",null,[t("p",null,[n("设 x_k = x^k + x^{-k}，则"),le,n(" > "),t("span",pe,[t("span",ie,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("x")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("x")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("x_1 = x_1")]),_:1})]),_:1})]),_:1})]),ce]),oe,n(" > "),t("span",re,[t("span",ue,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("x")]),_:1}),s(i,null,{default:a(()=>[n("2")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("x")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1}),s(k,null,{default:a(()=>[s(l,null,{default:a(()=>[n(")")]),_:1}),s(i,null,{default:a(()=>[n("2")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("2")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("x_2 = ( x_1 )^2 - 2")]),_:1})]),_:1})]),_:1})]),me]),de,n(" > "),t("span",fe,[t("span",_e,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("x")]),_:1}),s(i,null,{default:a(()=>[n("3")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("x")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("∗")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("x")]),_:1}),s(i,null,{default:a(()=>[n("2")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("x")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("x_3 = x_1 * x_2 - x_1")]),_:1})]),_:1})]),_:1})]),ke]),he,n(" > "),t("span",ye,[t("span",ze,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("x")]),_:1}),s(i,null,{default:a(()=>[n("4")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("x")]),_:1}),s(i,null,{default:a(()=>[n("2")]),_:1})]),_:1}),s(k,null,{default:a(()=>[s(l,null,{default:a(()=>[n(")")]),_:1}),s(i,null,{default:a(()=>[n("2")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("2")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("x_4 = ( x_2 )^2 - 2")]),_:1})]),_:1})]),_:1})]),ge]),ve,n(" ……"),be,n(" > "),t("span",xe,[t("span",we,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("x")]),_:1}),s(p,null,{default:a(()=>[s(i,null,{default:a(()=>[n("2")]),_:1}),s(e,null,{default:a(()=>[n("k")]),_:1})]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(l,null,{default:a(()=>[n("(")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("x")]),_:1}),s(e,null,{default:a(()=>[n("k")]),_:1})]),_:1}),s(k,null,{default:a(()=>[s(l,null,{default:a(()=>[n(")")]),_:1}),s(i,null,{default:a(()=>[n("2")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("2")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("x_{2k} = (x_k)^2 - 2")]),_:1})]),_:1})]),_:1})]),Ce]),Le,n(" > "),t("span",Xe,[t("span",Ye,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("x")]),_:1}),s(p,null,{default:a(()=>[s(i,null,{default:a(()=>[n("2")]),_:1}),s(e,null,{default:a(()=>[n("k")]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("x")]),_:1}),s(e,null,{default:a(()=>[n("k")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("∗")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("x")]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("k")]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("x")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("x_{2k+1} = x_k * x_{k+1} - x_1")]),_:1})]),_:1})]),_:1})]),qe]),De])])]),t("li",null,[n("斐波那契数 "),t("blockquote",null,[t("p",null,[t("span",Ne,[t("span",je,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("F")]),_:1}),s(i,null,{default:a(()=>[n("0")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(i,null,{default:a(()=>[n("0")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("F_0 = 0")]),_:1})]),_:1})]),_:1})]),Ae]),Be,n(" > "),t("span",Oe,[t("span",Fe,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("F")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("F_1 = 1")]),_:1})]),_:1})]),_:1})]),Ee]),Ve,n(" > "),t("span",Ie,[t("span",Re,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("F")]),_:1}),s(e,null,{default:a(()=>[n("n")]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("F")]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1})]),_:1})]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(o,null,{default:a(()=>[s(e,null,{default:a(()=>[n("F")]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("2")]),_:1})]),_:1})]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("F_n = F_{n-1} + F_{n-2}")]),_:1})]),_:1})]),_:1})]),$e]),Ke])])]),Me,Pe]),Se,t("p",null,[n("一种表达是这样的：如果要把 n 个对象分配到 m 个容器中，必有至少一个容器容纳至少"),t("span",Te,[t("span",Ge,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(z,{scriptlevel:"0",displaystyle:"true"},{default:a(()=>[s(p,null,{default:a(()=>[s(l,{fence:"true"},{default:a(()=>[n("⌈")]),_:1}),s(p,null,{default:a(()=>[s(_,null,{default:a(()=>[s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("n")]),_:1})]),_:1}),s(p,null,{default:a(()=>[s(e,null,{default:a(()=>[n("m")]),_:1})]),_:1})]),_:1})]),_:1}),s(l,{fence:"true"},{default:a(()=>[n("⌉")]),_:1})]),_:1})]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("\\displaystyle \\left\\lceil { \\frac {n}{m} }\\right\\rceil")]),_:1})]),_:1})]),_:1})]),He]),n("个对象。")]),Je,Qe,Ue,t("p",null,[n("集合公式："),t("span",We,[t("span",Ze,[s(m,null,{default:a(()=>[s(u,null,{default:a(()=>[s(p,null,{default:a(()=>[s(e,{mathvariant:"normal"},{default:a(()=>[n("∣")]),_:1}),s(e,null,{default:a(()=>[n("A")]),_:1}),s(l,null,{default:a(()=>[n("∪")]),_:1}),s(e,null,{default:a(()=>[n("B")]),_:1}),s(l,null,{default:a(()=>[n("∪")]),_:1}),s(e,null,{default:a(()=>[n("C")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n("∣")]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n("∣")]),_:1}),s(e,null,{default:a(()=>[n("A")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n("∣")]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n("∣")]),_:1}),s(e,null,{default:a(()=>[n("B")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n("∣")]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n("∣")]),_:1}),s(e,null,{default:a(()=>[n("C")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n("∣")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n("∣")]),_:1}),s(e,null,{default:a(()=>[n("A")]),_:1}),s(l,null,{default:a(()=>[n("∩")]),_:1}),s(e,null,{default:a(()=>[n("B")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n("∣")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n("∣")]),_:1}),s(e,null,{default:a(()=>[n("B")]),_:1}),s(l,null,{default:a(()=>[n("∩")]),_:1}),s(e,null,{default:a(()=>[n("C")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n("∣")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n("∣")]),_:1}),s(e,null,{default:a(()=>[n("A")]),_:1}),s(l,null,{default:a(()=>[n("∩")]),_:1}),s(e,null,{default:a(()=>[n("C")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n("∣")]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n("∣")]),_:1}),s(e,null,{default:a(()=>[n("A")]),_:1}),s(l,null,{default:a(()=>[n("∩")]),_:1}),s(e,null,{default:a(()=>[n("B")]),_:1}),s(l,null,{default:a(()=>[n("∩")]),_:1}),s(e,null,{default:a(()=>[n("C")]),_:1}),s(e,{mathvariant:"normal"},{default:a(()=>[n("∣")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("|A \\cup B \\cup C| = |A| + |B| + |C| - |A \\cap B| - |B \\cap C| - |A \\cap C| + |A \\cap B \\cap C|")]),_:1})]),_:1})]),_:1})]),st])]),at])}const pt=g(x,[["render",nt],["__file","02-组合数学.html.vue"]]);export{pt as default};
