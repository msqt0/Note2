import{_ as s,p as n,q as a,a1 as e}from"./framework-7db056f4.js";const i={},l=e(`<h1 id="安装篇" tabindex="-1"><a class="header-anchor" href="#安装篇" aria-hidden="true">#</a> 安装篇</h1><p>这里我们会开始安装部署 web 服务器需要的应用了，暂时以 ubuntu20 为例</p><h2 id="管理软件" tabindex="-1"><a class="header-anchor" href="#管理软件" aria-hidden="true">#</a> 管理软件</h2><p>登录服务器后，可以使用 apt-get 包管理工具管理软件包<b>使用命令：</b></p><ul><li><code>sudo apt-get update</code> 更新 ubuntu 的包管理工具（更新软件列表）</li><li><code>sudo apt-get upgrade</code> 更新已经安装的软件包到源列表最新（必须先执行 update 再执行 upgrade，以便使包管理工具获取需要更新的软件索引）</li><li><code>sudo apt-get install xxx</code> 升级/安装 xxx 软件包</li><li><code>sudo apt-get remove xxx</code> 移除软件包，注意只是软件包，配置仍然会留在系统里</li><li><code>sudo apt-get purge xxx</code> 移除软件包 xxx，注意会把包和相关配置全部删除</li><li><code>sudo apt-cache search xxx</code> 当你不确切知道要安装的软件包名称可以使用加关键字来模糊搜索包名，关键字可以加多个</li><li><code>sudo apt list --installed</code> 列出当前安装的软件，与<code>grep</code>一起使用来查询是否安装过的软件</li></ul><blockquote><p>这些指令需要 root 权限，如果你已经使用 root 账户登录，可以不需要加 sudo,当然加也不会有什么影响 在命令后加 -y 选项可以默认回应 y, 建议不加</p></blockquote><div class="custom-container tip"><p class="custom-container-title">TIP</p><p><code>dist-upgrade</code> 除执行升级功能外，<code>dist-upgrade</code> 还智能地处理与新版本包的依赖关系的变化。<code>apt-get</code> 有一个 &quot;智能&quot; 的冲突解决系统，如果有必要，它将尝试升级最重要的包，以牺牲不那么重要的包为代价。因此，<code>dist-upgrade</code> 命令可能会删除一些包。因此在更新系统中的包时，建议按顺序执行下面的命令： <code>$ apt-get update</code><code>$ apt-get upgrade -y</code><code>$ apt-get dis-upgrade -y</code></p></div><p>然后开始安装工具包</p><p>我个人运维方面的经验还不足，目前只使用这些还过得去</p><ul><li>tmux</li><li>git</li><li>ranger（非必要）</li><li>htop（非必要）</li></ul><p>tmux 是用来管理后台进程的，因为在 linux 中窗口经常与进程（或者说 session）绑定在一起的，如果窗口关闭，进程就关闭，那么当我们运行一个服务端后，就无法操作其他事情了，而当你结束这次 session（断开与服务器的链接），服务端就会关闭，当然你可以以守护进程的方式执行，但是使用 tmux 可以更高效地更统一地管理，简单来说 tmux 可以把 window 和 session<code>解绑</code>,后面的小节可能才会较详细地写</p><p>git 主要用来获取需要部署的项目，或者安装其他工具，它不是本节重点</p><p>其实这两个软件在 unbuntu20 里已经安装了（如果没安装请先安装）</p><p>因此，我们暂且跳过它们</p><h2 id="前端环境" tabindex="-1"><a class="header-anchor" href="#前端环境" aria-hidden="true">#</a> 前端环境</h2><p>一般来说前端需要这些基础<b>环境</b>:</p><ul><li>nodejs</li><li>npm</li><li>nginx</li></ul><p>接下来你可以选择从官网获取最新的版本安装，也可以使用包管理安装它们，尽管它们版本或许不是最新的，我这里仅以包管理为例介绍我认为方便的方法安装</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>因为 ubuntu 源内的软件包都属于最为稳定而非最新的版本，因此部分软件版本或许比较低，但也不一定需要更新到最新的版本，所以在满足兼容问题的条件下，服务器的软件包应当选择更为稳定的版本为佳</p></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">apt-get</span> <span class="token function">install</span> nginx

<span class="token comment"># nginx -v</span>
<span class="token comment"># nginx version: nginx/1.18.0 (Ubuntu) 足够用了</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">apt-get</span> <span class="token function">install</span> nodejs
<span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">npm</span>

<span class="token comment"># 默认低版本</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="更新-nodejs" tabindex="-1"><a class="header-anchor" href="#更新-nodejs" aria-hidden="true">#</a> 更新 nodejs</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>root@VM-20-15-ubuntu:~<span class="token comment"># npm --version</span>
<span class="token number">6.14</span>.4
root@VM-20-15-ubuntu:~<span class="token comment"># node --version</span>
<span class="token number">10.4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>发现 nodejs 和 npm 的版本很低</p><p>先使用 npm 安装 n</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">npm</span> i <span class="token parameter variable">-g</span> n
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>再使用 n 把 nodejs 更新为稳定版</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> n stable

<span class="token comment"># 更新后</span>
<span class="token comment"># node --version</span>
<span class="token comment"># v16.16.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用 npm 把自己更新为最新</p><div class="language-npm line-numbers-mode" data-ext="npm"><pre class="language-npm"><code>sudo npm i -g npm@latest

# 更新后
# npm --version
# 8.17.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>使用 nvm 管理 nodejs/npm 未尝不是一个好的选择</p></blockquote><h2 id="后端环境" tabindex="-1"><a class="header-anchor" href="#后端环境" aria-hidden="true">#</a> 后端环境</h2><p>后端一般需要安装编程语言的环境，数据库，及 apache 服务器(tomcat hadoop)</p><p>我比较懒，java 直接使用 jar 包部署，连 tomcat 都不用整了（自行学习吧）</p><p><b>需要安装：</b></p><ul><li>java</li><li>mysql <blockquote><p>仅以 java 和 mysql 为例</p></blockquote></li></ul><h3 id="java-环境" tabindex="-1"><a class="header-anchor" href="#java-环境" aria-hidden="true">#</a> java 环境</h3><p>你发现无论使用<code>apt-get install java</code>， 还是<code>apt-get install jdk</code> 都没有找到包，这是因为包名 不正确，那么我们可以使用<code>apt-cache search java jdk</code> 来模糊搜索包名，结果有很多，仅挑选有用的信息：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>openjdk-16-jdk - OpenJDK Development Kit <span class="token punctuation">(</span>JDK<span class="token punctuation">)</span>
openjdk-16-jdk-headless - OpenJDK Development Kit <span class="token punctuation">(</span>JDK<span class="token punctuation">)</span> <span class="token punctuation">(</span>headless<span class="token punctuation">)</span>
openjdk-17-jdk - OpenJDK Development Kit <span class="token punctuation">(</span>JDK<span class="token punctuation">)</span>
openjdk-17-jdk-headless - OpenJDK Development Kit <span class="token punctuation">(</span>JDK<span class="token punctuation">)</span> <span class="token punctuation">(</span>headless<span class="token punctuation">)</span>
openjdk-8-jdk - OpenJDK Development Kit <span class="token punctuation">(</span>JDK<span class="token punctuation">)</span>
openjdk-8-jdk-headless - OpenJDK Development Kit <span class="token punctuation">(</span>JDK<span class="token punctuation">)</span> <span class="token punctuation">(</span>headless<span class="token punctuation">)</span>
openjdk-13-jdk - OpenJDK Development Kit <span class="token punctuation">(</span>JDK<span class="token punctuation">)</span>
openjdk-13-jdk-headless - OpenJDK Development Kit <span class="token punctuation">(</span>JDK<span class="token punctuation">)</span> <span class="token punctuation">(</span>headless<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>原来在 linux 中 jdk 被叫做<code>openjdk</code>，我们选择一个合适的版本安装（与项目兼容）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> openjdk-8-jdk-headless
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>headless 的是用来运行不包含 GUI 的 java 程序的，不带 headless 的可以运行带 GUI 的 java 程序</p></div><p><b>安装完成确认版本：</b></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">java</span> <span class="token parameter variable">-version</span>
openjdk version <span class="token string">&quot;1.8.0_342&quot;</span>
OpenJDK Runtime Environment <span class="token punctuation">(</span>build <span class="token number">1.8</span>.0_342-8u342-b07-0ubuntu1~20.04-b07<span class="token punctuation">)</span>
OpenJDK <span class="token number">64</span>-Bit Server VM <span class="token punctuation">(</span>build <span class="token number">25.342</span>-b07, mixed mode<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql" aria-hidden="true">#</a> mysql</h3><p>安装 mysql 最简单快速的方法，四触碰璧后终于找到家了</p><p>这里可以快一点，<b>使用命令：</b></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> mysql-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>确认版本：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">--version</span>
mysql  Ver <span class="token number">8.0</span>.30-0ubuntu0.20.04.2 <span class="token keyword">for</span> Linux on x86_64 <span class="token variable"><span class="token punctuation">((</span>Ubuntu<span class="token punctuation">))</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="初始化配置" tabindex="-1"><a class="header-anchor" href="#初始化配置" aria-hidden="true">#</a> 初始化配置</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> mysql_secure_installation
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这些是推荐的选项，当然你可以自己配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>VALIDATE PASSWORD PLUGIN can be used to <span class="token builtin class-name">test</span> passwords<span class="token punctuation">..</span>.
Press y<span class="token operator">|</span>Y <span class="token keyword">for</span> Yes, any other key <span class="token keyword">for</span> No: N （选择 N ,不会进行密码的强校验）



Please <span class="token builtin class-name">set</span> the password <span class="token keyword">for</span> root here<span class="token punctuation">..</span>.
New password: （输入密码）
Re-enter new password: （重复输入）



By default, a MySQL installation has an anonymous user,
allowing anyone to log into MySQL without having to have
a user account created <span class="token keyword">for</span> them<span class="token punctuation">..</span>.
Remove anonymous users? <span class="token punctuation">(</span>Press y<span class="token operator">|</span>Y <span class="token keyword">for</span> Yes, any other key <span class="token keyword">for</span> No<span class="token punctuation">)</span> <span class="token builtin class-name">:</span> Y （选择 Y，删除匿名用户）



Normally, root should only be allowed to connect from
<span class="token string">&#39;localhost&#39;</span><span class="token builtin class-name">.</span> This ensures that someone cannot guess at
the root password from the network<span class="token punctuation">..</span>.
Disallow root login remotely? <span class="token punctuation">(</span>Press y<span class="token operator">|</span>Y <span class="token keyword">for</span> Yes, any other key <span class="token keyword">for</span> No<span class="token punctuation">)</span> <span class="token builtin class-name">:</span> N （选择 N，允许 root 远程连接）



By default, MySQL comes with a database named <span class="token string">&#39;test&#39;</span> that
anyone can access<span class="token punctuation">..</span>.
Remove <span class="token builtin class-name">test</span> database and access to it? <span class="token punctuation">(</span>Press y<span class="token operator">|</span>Y <span class="token keyword">for</span> Yes, any other key <span class="token keyword">for</span> No<span class="token punctuation">)</span> <span class="token builtin class-name">:</span> N （选择 N，不删除 <span class="token builtin class-name">test</span> 数据库）



Reloading the privilege tables will ensure that all changes
made so far will take effect immediately.
Reload privilege tables now? <span class="token punctuation">(</span>Press y<span class="token operator">|</span>Y <span class="token keyword">for</span> Yes, any other key <span class="token keyword">for</span> No<span class="token punctuation">)</span> <span class="token builtin class-name">:</span> Y （选择 Y，修改权限立即生效）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="检查-mysql-服务状态" tabindex="-1"><a class="header-anchor" href="#检查-mysql-服务状态" aria-hidden="true">#</a> 检查 mysql 服务状态</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl status mysql.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>状态</th></tr></thead><tbody><tr><td><img src="https://user-images.githubusercontent.com/94043894/184657188-6d7615f5-4076-473b-a274-6de934675a27.png" alt="image"></td></tr></tbody></table><h4 id="配置远程访问" tabindex="-1"><a class="header-anchor" href="#配置远程访问" aria-hidden="true">#</a> 配置远程访问</h4><p>在 Ubuntu 下 MySQL 缺省是只允许本地访问的</p><p>如果你要其他机器也能够访问的话，需要进行配置；</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">vim</span> /etc/mysql/mysql.conf.d/mysqld.cnf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>vim 打开 <code>mysqld.cnf</code> ，找到<code>bind-address</code>, 默认参数应该为<code>127.0.0.1</code>, 把参数改为<code>0.0.0.0</code>（如果需要远程访问）</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>这里如果你的后端与数据库部署同一个服务器，且那么短时间内不会分开部署，并且不需要远程调试，为了安全起见可以不需要更改</p></div><p>重启 mysql 命令：<code>sudo /etc/init.d/mysql restart</code></p><p>到这里没什么问题的话， mysql 安装基本告一段落了，下面的都是常规操作</p><h4 id="设置账户" tabindex="-1"><a class="header-anchor" href="#设置账户" aria-hidden="true">#</a> 设置账户</h4><p>登录：<code>sudo mysql -uroot -p</code><br> 切换数据库：<code>mysql&gt; use mysql;</code> 查询用户表：<code>mysql&gt;select User, authentication_string, Host from user;</code> 查看状态：<code>select host, user, plugin from user;</code></p><p>设置权限与密码</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">USER</span> <span class="token string">&#39;root&#39;</span><span class="token variable">@&#39;localhost&#39;</span> IDENTIFIED <span class="token keyword">WITH</span> mysql_native_password <span class="token keyword">BY</span> <span class="token string">&#39;密码&#39;</span><span class="token punctuation">;</span> <span class="token comment">#使用 mysql_native_password 修改加密规则</span>
<span class="token keyword">ALTER</span> <span class="token keyword">USER</span> <span class="token string">&#39;root&#39;</span><span class="token variable">@&#39;localhost&#39;</span> IDENTIFIED <span class="token keyword">BY</span> <span class="token string">&#39;密码&#39;</span> PASSWORD EXPIRE NEVER<span class="token punctuation">;</span> <span class="token comment">#更新一下用户的密码</span>
<span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">SET</span> host <span class="token operator">=</span> <span class="token string">&#39;%&#39;</span> <span class="token keyword">WHERE</span> <span class="token keyword">user</span> <span class="token operator">=</span> <span class="token string">&#39;root&#39;</span><span class="token punctuation">;</span> <span class="token comment">#允许远程访问</span>
<span class="token comment">#刷新 cache 中配置 刷新权限</span>
flush <span class="token keyword">privileges</span><span class="token punctuation">;</span>
quit<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="开放端口" tabindex="-1"><a class="header-anchor" href="#开放端口" aria-hidden="true">#</a> 开放端口</h4><p>在服务商管理面板加就好了</p><h3 id="redis" tabindex="-1"><a class="header-anchor" href="#redis" aria-hidden="true">#</a> redis</h3><h2 id="docker" tabindex="-1"><a class="header-anchor" href="#docker" aria-hidden="true">#</a> docker</h2>`,73),t=[l];function d(o,c){return n(),a("div",null,t)}const r=s(i,[["render",d],["__file","02-安装.html.vue"]]);export{r as default};
