import{_ as s,M as i,p as t,q as o,R as e,t as c,N as r,a1 as n}from"./framework-7db056f4.js";const d={},l=n('<h1 id="忽略文件" tabindex="-1"><a class="header-anchor" href="#忽略文件" aria-hidden="true">#</a> 忽略文件</h1><p>有些时候，你必须把某些文件放到Git工作目录中，但又不能提交它们，比如保存了数据库密码的配置文件啦，等等，每次 add 时都会看见<code>untracked files</code>, 无法保证工作区 <code>clean</code></p><p>好在Git考虑到了大家的感受，这个问题解决起来也很简单，在Git工作区的根目录下创建一个特殊的<code>.gitignore</code>文件，然后把要忽略的文件名填进去，Git就会自动忽略这些文件。</p><p>不需要从头写<code>.gitignore</code>文件，GitHub已经为我们准备了各种配置文件，只需要组合一下就可以使用了。</p>',4),p={href:"https://github.com/github/gitignore",target:"_blank",rel:"noopener noreferrer"},h=n(`<p>忽略文件的原则是：</p><ul><li>忽略操作系统自动生成的文件，比如缩略图等；</li><li>忽略编译生成的中间文件、可执行文件等，也就是如果一个文件是通过另一个文件自动生成的，那自动生成的文件就没必要放进版本库，比如Java编译产生的.class文件；</li><li>忽略你自己的带有敏感信息的配置文件，比如存放口令的配置文件。</li></ul><h2 id="编写技巧" tabindex="-1"><a class="header-anchor" href="#编写技巧" aria-hidden="true">#</a> 编写技巧</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>.*             <span class="token comment"># 任何以.开头的文件</span>
*.class        <span class="token comment"># 任何以.class结尾的文件</span>


<span class="token operator">!</span>.gitignore    <span class="token comment"># 因为.gitignore文件也会被排除，需要使用! + 文件的方式取消排除</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function u(_,m){const a=i("ExternalLinkIcon");return t(),o("div",null,[l,e("p",null,[e("a",p,[c("https://github.com/github/gitignore"),r(a)])]),h])}const v=s(d,[["render",u],["__file","08-忽略.html.vue"]]);export{v as default};
