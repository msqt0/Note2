import{_ as n,p as s,q as a,a1 as e}from"./framework-7db056f4.js";const t={},o=e(`<h1 id="创建" tabindex="-1"><a class="header-anchor" href="#创建" aria-hidden="true">#</a> 创建</h1><h2 id="创建记录" tabindex="-1"><a class="header-anchor" href="#创建记录" aria-hidden="true">#</a> 创建记录</h2><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>user <span class="token operator">:=</span> User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;Jinzhu&quot;</span><span class="token punctuation">,</span> Age<span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> Birthday<span class="token punctuation">:</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>

db<span class="token punctuation">.</span><span class="token function">NewRecord</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span> <span class="token comment">// =&gt; 返回 \`true\` ，因为主键为空, (是否能创建)</span>

db<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span>

db<span class="token punctuation">.</span><span class="token function">NewRecord</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span> <span class="token comment">// =&gt; 在 \`user\` 之后创建返回 \`false\`</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="默认值" tabindex="-1"><a class="header-anchor" href="#默认值" aria-hidden="true">#</a> 默认值</h2><p>你可以通过标签定义字段的默认值，例如：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> Animal <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    ID   <span class="token builtin">int64</span>
    Name <span class="token builtin">string</span> <span class="token string">\`gorm:&quot;default:&#39;galeone&#39;&quot;\`</span>
    Age  <span class="token builtin">int64</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后 SQL 会排除那些没有值或者有 零值 的字段，在记录插入数据库之后，gorm将从数据库中加载这些字段的值。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">var</span> animal <span class="token operator">=</span> Animal<span class="token punctuation">{</span>Age<span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">,</span> Name<span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">}</span>
db<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>animal<span class="token punctuation">)</span>
<span class="token comment">// INSERT INTO animals(&quot;age&quot;) values(&#39;99&#39;);</span>
<span class="token comment">// SELECT name from animals WHERE ID=111; // 返回的主键是 111</span>
<span class="token comment">// animal.Name =&gt; &#39;galeone&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意 所有包含零值的字段，像 <code>0</code>，<code>&#39;&#39;</code>，<code>false</code> 或者其他的 零值 不会被保存到数据库中，但会使用这个字段的默认值。你应该考虑使用指针类型或者其他的值来避免这种情况:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// Use pointer value</span>
<span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  gorm<span class="token punctuation">.</span>Model
  Name <span class="token builtin">string</span>
  Age  <span class="token operator">*</span><span class="token builtin">int</span> <span class="token string">\`gorm:&quot;default:18&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token comment">// Use scanner/valuer</span>
<span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  gorm<span class="token punctuation">.</span>Model
  Name <span class="token builtin">string</span>
  Age  sql<span class="token punctuation">.</span>NullInt64 <span class="token string">\`gorm:&quot;default:18&quot;\`</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="在钩子中设置字段值" tabindex="-1"><a class="header-anchor" href="#在钩子中设置字段值" aria-hidden="true">#</a> 在钩子中设置字段值</h2><p>如果你想在 <code>BeforeCreate</code> 函数中更新字段的值，应该使用 <code>scope.SetColumn</code>，例如：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>user <span class="token operator">*</span>User<span class="token punctuation">)</span> <span class="token function">BeforeCreate</span><span class="token punctuation">(</span>scope <span class="token operator">*</span>gorm<span class="token punctuation">.</span>Scope<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
  scope<span class="token punctuation">.</span><span class="token function">SetColumn</span><span class="token punctuation">(</span><span class="token string">&quot;ID&quot;</span><span class="token punctuation">,</span> uuid<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建额外选项" tabindex="-1"><a class="header-anchor" href="#创建额外选项" aria-hidden="true">#</a> 创建额外选项</h2><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// 为插入 SQL 语句添加额外选项</span>
db<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;gorm:insert_option&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ON CONFLICT&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>product<span class="token punctuation">)</span>
<span class="token comment">// INSERT INTO products (name, code) VALUES (&quot;name&quot;, &quot;code&quot;) ON CONFLICT;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),p=[o];function c(i,l){return s(),a("div",null,p)}const d=n(t,[["render",c],["__file","05-创建.html.vue"]]);export{d as default};
