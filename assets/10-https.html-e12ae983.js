import{_ as n,p as s,q as a,a1 as t}from"./framework-7db056f4.js";const p={},e=t(`<h1 id="http-https" tabindex="-1"><a class="header-anchor" href="#http-https" aria-hidden="true">#</a> http/Https</h1><h2 id="http" tabindex="-1"><a class="header-anchor" href="#http" aria-hidden="true">#</a> http</h2><p>http 是明文传输的，非常不安全，任何情况下都不建议使用</p><h2 id="https" tabindex="-1"><a class="header-anchor" href="#https" aria-hidden="true">#</a> https</h2><p>比 http 添加了 TLS 层传输层，对数据进行了加密, 有 SSL 证书验证，是比较安全的方式</p><h2 id="http-listener" tabindex="-1"><a class="header-anchor" href="#http-listener" aria-hidden="true">#</a> Http Listener</h2><ul><li>http.ListenAndServe 函数</li><li>http.ListenAndServeTLS 函数</li></ul><blockquote><p>go 提供了生成自定义证书的方式: 使用 <code>go run GOPATH:/src/crypto/tls/generate_cert.go -h</code> 查看帮助</p></blockquote><p>当使用了 https，应用将自动从 HTTP/1.1 升级为 HTTP/2.0</p><h2 id="http-2-0" tabindex="-1"><a class="header-anchor" href="#http-2-0" aria-hidden="true">#</a> HTTP/2.0</h2><ul><li>请求多路复用</li><li>Header 压缩</li><li>默认安全, 基本上只使用 https</li><li>Server Push</li></ul><h3 id="server-push" tabindex="-1"><a class="header-anchor" href="#server-push" aria-hidden="true">#</a> Server Push</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">handleHome</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> pusher<span class="token punctuation">,</span> ok <span class="token operator">:=</span> w<span class="token punctuation">.</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>Pusher<span class="token punctuation">)</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
        pusher<span class="token punctuation">.</span><span class="token function">Push</span><span class="token punctuation">(</span><span class="token string">&quot;/css/app.css&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>PushOptions<span class="token punctuation">{</span>
            Header<span class="token punctuation">:</span> http<span class="token punctuation">.</span>Header<span class="token punctuation">{</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;text/css&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        t<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> template<span class="token punctuation">.</span><span class="token function">ParseFiles</span><span class="token punctuation">(</span><span class="token string">&quot;layout.html&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;home.html&quot;</span><span class="token punctuation">)</span>
        t<span class="token punctuation">.</span><span class="token function">ExecuteTemplate</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token string">&quot;layout&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),o=[e];function c(u,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","10-https.html.vue"]]);export{r as default};
