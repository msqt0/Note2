import{_ as a,p as s,q as n,a1 as e}from"./framework-7db056f4.js";const t={},d=e(`<h1 id="ddl" tabindex="-1"><a class="header-anchor" href="#ddl" aria-hidden="true">#</a> DDL</h1><h2 id="数据库" tabindex="-1"><a class="header-anchor" href="#数据库" aria-hidden="true">#</a> 数据库</h2><h3 id="查询" tabindex="-1"><a class="header-anchor" href="#查询" aria-hidden="true">#</a> 查询</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 查询所有数据库</span>
<span class="token keyword">show</span> <span class="token keyword">databases</span>

<span class="token comment">-- 查询当前数据库</span>
<span class="token keyword">select</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建" tabindex="-1"><a class="header-anchor" href="#创建" aria-hidden="true">#</a> 创建</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">database</span> <span class="token punctuation">[</span><span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span><span class="token punctuation">]</span> name <span class="token punctuation">[</span><span class="token keyword">default</span> <span class="token keyword">charset</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">collate</span> 排列规则<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>可以使用<code>create database test default charset utf8mb4</code>创建一个支持utf-8编码的数据库，因为中文字符中</p></blockquote><h3 id="删除" tabindex="-1"><a class="header-anchor" href="#删除" aria-hidden="true">#</a> 删除</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">drop</span> <span class="token keyword">database</span> <span class="token punctuation">[</span><span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">]</span> name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">use</span> name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="表" tabindex="-1"><a class="header-anchor" href="#表" aria-hidden="true">#</a> 表</h2><h3 id="查询-1" tabindex="-1"><a class="header-anchor" href="#查询-1" aria-hidden="true">#</a> 查询</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 查询当前数据库所有表</span>
<span class="token keyword">show</span> <span class="token keyword">tables</span><span class="token punctuation">;</span>


<span class="token comment">-- 查询表结构</span>
<span class="token keyword">desc</span> name<span class="token punctuation">;</span>


<span class="token comment">-- 查询指定表的建表语句</span>
<span class="token keyword">show</span> <span class="token keyword">create</span> <span class="token keyword">table</span> name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建字段" tabindex="-1"><a class="header-anchor" href="#创建字段" aria-hidden="true">#</a> 创建字段</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> name <span class="token punctuation">(</span>
字段<span class="token number">1</span>  字段类型 <span class="token punctuation">[</span><span class="token keyword">comment</span> 字段注解<span class="token punctuation">]</span><span class="token punctuation">,</span>
字段<span class="token number">2</span>  字段类型 <span class="token punctuation">[</span><span class="token keyword">comment</span> 字段注解<span class="token punctuation">]</span><span class="token punctuation">,</span>
字段<span class="token number">3</span>  字段类型 <span class="token punctuation">[</span><span class="token keyword">comment</span> 字段注解<span class="token punctuation">]</span><span class="token punctuation">,</span>
字段<span class="token number">4</span>  字段类型 <span class="token punctuation">[</span><span class="token keyword">comment</span> 字段注解<span class="token punctuation">]</span> 
<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token keyword">comment</span> 表注解<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字段类型" tabindex="-1"><a class="header-anchor" href="#字段类型" aria-hidden="true">#</a> 字段类型</h3><p><strong>数字:</strong></p><table><thead><tr><th>类型</th><th>大小</th></tr></thead><tbody><tr><td>整形</td><td></td></tr><tr><td>tinyint</td><td>1 byte</td></tr><tr><td>smallint</td><td>2 byte</td></tr><tr><td>mediumint</td><td>3 byte</td></tr><tr><td>int or integer</td><td>4 byte</td></tr><tr><td>bigint</td><td>8 byte</td></tr><tr><td>浮点数</td><td></td></tr><tr><td>float</td><td>4 byte</td></tr><tr><td>double</td><td>8 byte</td></tr><tr><td>decimal</td><td></td></tr></tbody></table><blockquote><p>其中decimal的范围依赖于M(精度)和D(标度)的值<br> 标示double 和 decimal的精度需要额外的两个参数, 例如我要表示3位整数1位小数<code>double(4, 1)</code><br> 可以使用unsigned来标识该变量没有负取值</p></blockquote><br><p><strong>字符:</strong></p><table><thead><tr><th>类型</th><th>大小</th><th>描述</th></tr></thead><tbody><tr><td>char</td><td>0-255 Byte</td><td>定长字符串</td></tr><tr><td>varchar</td><td>0-65535 Byte</td><td>变长字符串</td></tr><tr><td>tinytext</td><td>0-255 Byte</td><td>短文本字符串</td></tr><tr><td>blob</td><td>0-65535 Byte</td><td>二进制形式的长文本数据</td></tr><tr><td>text</td><td>0-65535 Byte</td><td>长文本数据</td></tr><tr><td>mediumblob</td><td>0-16777215 Byte</td><td>二进制形式的中等长度文本数据</td></tr><tr><td>mediumtext</td><td>0-16777215 Byte</td><td>中等长度文本数据</td></tr><tr><td>longblob</td><td>0-4294967295 Byte</td><td>二进制形式的极大文本数据</td></tr><tr><td>longtext</td><td>0-4294967295 Byte</td><td>极大文本数据</td></tr></tbody></table><blockquote><p>char(n) 写死一个字段就是n个字节, varchar(n) 最大字节是n个字节,若少于n个字节则使用更少内存, 但是 char 性能 高于 varchar</p></blockquote><h3 id="删除表" tabindex="-1"><a class="header-anchor" href="#删除表" aria-hidden="true">#</a> 删除表</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="更新表" tabindex="-1"><a class="header-anchor" href="#更新表" aria-hidden="true">#</a> 更新表</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span> <span class="token keyword">ADD</span><span class="token operator">/</span><span class="token keyword">MODIFY</span><span class="token operator">/</span>CHANGE<span class="token operator">/</span><span class="token keyword">DROP</span><span class="token operator">/</span><span class="token keyword">RENAME</span> <span class="token keyword">TO</span> <span class="token keyword">COLUMN</span> <span class="token operator">&lt;</span>列的定义<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>命令：<code>alter table testdata.what add column y_num int(10);</code>column可以省略<br> 表示在testdata.what表的最后插入一列 y_num</p><p>MODIFY 只能修改字段类型<br> CHANGE 可以修改的字段名,类型等<br> DROP 删除字段<br> RENAME TO 更改字段名字</p><h3 id="更改表名" tabindex="-1"><a class="header-anchor" href="#更改表名" aria-hidden="true">#</a> 更改表名</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">RENAME</span> <span class="token keyword">TABLE</span> testdata<span class="token punctuation">.</span>what <span class="token keyword">to</span> testdata<span class="token punctuation">.</span><span class="token keyword">some</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,32),o=[d];function l(r,c){return s(),n("div",null,o)}const i=a(t,[["render",l],["__file","02-DDL.html.vue"]]);export{i as default};
