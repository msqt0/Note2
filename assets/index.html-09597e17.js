import{_ as a,p as l,q as o,a1 as t}from"./framework-7db056f4.js";const e={},i=t('<h1 id="java" tabindex="-1"><a class="header-anchor" href="#java" aria-hidden="true">#</a> Java</h1><p>  Java 是 Sun 公司推出的能够跨越多平台的、可移植性最高的一种面向对象的编程语言，也是目前最先进、特征最丰富、功能最强大的计算机语言。利用 Java 可以编写桌面应用程序、Web 应用程序、分布式系统应用程序、嵌入式系统应用程序等，从而使其成为应用最广泛的开发语言。</p><p>  Java 语言是 Sun 公司于 1990 年开发的；1994 年，Gosling 用 Java 语言开发了一个实用性较高、可靠、安全、有交互功能的新型 Web 浏览器，它不依赖与任何硬件平台和软件平台，该浏览器被命名为 HotJava，并于 1995 年在业界发表，引起了巨大的轰动，Java 语言的地位随之得到了肯定；1995年5月23日，JDK（Java Developmenr Kit）1.0a2 版本正是对外发布；2009年4月20日，Sun 公司被 Oracle 公司收购。</p><p>为了满足不同开发人员的需求，Java 开发分成了以下 3 个方向：</p><ol><li><p>Java SE：主要用于桌面程序的开发。它是学习 Java EE 和 Java ME 的基础。</p></li><li><p>Java EE：主要用于网页程序的开发。随着互联网的发展，越来越多的企业使用 Java 语言来开发自己的官方网站，其中不乏一些世界 500 强。</p></li><li><p>Java ME：主要用于嵌入式系统程序的开发。</p></li></ol><h1 id="java-语言的特点" tabindex="-1"><a class="header-anchor" href="#java-语言的特点" aria-hidden="true">#</a> Java 语言的特点</h1><ol><li>简单</li></ol><blockquote><p>Java 语言的语法简单明了，容易掌握，而且是纯面对对象的语言。</p></blockquote><p>Java 语言的 简单性主要体现在以下几点：</p><ul><li>语法规则和 C++类似。从某种意义上讲，Java 语言是由 C 和 C++语言转变而来，所以 C 程序设计人员可以很容易地掌握 Java 语言的语法。</li><li>Java 语言可以对 C++进行了简化和提高。</li><li>Java 提供了丰富的类库和 API 文档以及第三方开发包，另外还有大量的基于 Java 的开源项目，现在 JDK 也开放源代码了，读者可以通过分析项目的源代码，提高自己的编程水平。</li></ul><ol start="2"><li>面向对象</li></ol><blockquote><p>Java 语言本身是一种面向对象的程序设计语言。Java 提倡万物皆对象，语法中不能在类外面定义单独的变量和方法，也就是说，Java 语言最外部的数据类型是对象，所有的元素都要通过类和对象来访问。</p></blockquote><ol start="3"><li>分布性</li></ol><blockquote><p>Java 的分布性包括操作分布和数据分布，其中操作分布是指在多个不同的主机上布置相关操作。而数据分布是将数据分别存放在多个不同的主机上，这些主机是网络中的不同成员。Java 可以凭借 URL 对象访问网络对象，访问方式与访问本地系统相同。</p></blockquote><ol start="4"><li>可移植性</li></ol><blockquote><p>Java 程序具有与体系结构无关的特性，从而使 Java 程序可以方便地移植到网络的不同计算机中。同时，Java 的类库中也实现了针对不同平台的接口，使这些类库也可以移植。</p></blockquote><ol start="5"><li>解释性</li></ol><blockquote><p>运行 Java 程序需要解释器。任何移植了 Java 解释器的计算机或其他设备都可以用 Java 字节码进行解释执行。字节码独立于平台，它本身携带了许多编译时信息，使得连接过程更加简单，开发过程也就更加迅速，更具探索性。</p></blockquote><ol start="6"><li>安全性</li></ol><blockquote><p>Java 语言删除了类似 C 语言中的指针和内存释放等语法，从而有效地避免了非法操作内存。Java 程序代码要经过代码校验、指针校验等很多的测试步骤才能够运行，所以未经允许的 Java 程序不可能出现损害系统平台的行为，而且使用 Java 可以编写防病毒和防修改的系统。</p></blockquote><ol start="7"><li>健壮性</li></ol><blockquote><p>Java 的设计目标之一是编写多方面可靠的应用程序，Java 将检查程序在编译和运行时的错误，以及消除错误。类型检查能帮助用户检查出许多开发早期译出现的错误。同时，很多集成开发工具 IDE（如 Eclipse、NetBeans）的出现使编译和运行 Java 程序更加容易。</p></blockquote><ol start="8"><li>多线程</li></ol><blockquote><p>多线程机制能够使应用程序在同一时间并行执行多项任务，而且相应的同步机制可以保证不同线程能够正确地共享数据。使用多线程，可以带来更好的交互能力和实时行为。</p></blockquote><ol start="9"><li>高性能</li></ol><blockquote><p>Java 编译后的字节码是在解释器中运行的，所以它的速度比多数交互应用程序提高了很多。另外，字节码可以在程序运行时被翻译成特定平台的机器指令，从而进一步提高运行速度。</p></blockquote><ol start="10"><li>动态</li></ol><blockquote><p>Java 在很多方便比 C 和 C++更能够适应发展的环境，可以动态调整库中方法和变量的增加，而客户端却不需要作任何更改。在 Java 中动态调整是非常简单、直接的。</p></blockquote>',28),v=[i];function J(c,p){return l(),o("div",null,v)}const u=a(e,[["render",J],["__file","index.html.vue"]]);export{u as default};
