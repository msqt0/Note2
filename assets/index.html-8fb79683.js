import{_ as e,p as d,q as o,a1 as c}from"./framework-7db056f4.js";const i={},n=c('<h1 id="git-简介" tabindex="-1"><a class="header-anchor" href="#git-简介" aria-hidden="true">#</a> Git 简介</h1><h2 id="git-诞生" tabindex="-1"><a class="header-anchor" href="#git-诞生" aria-hidden="true">#</a> Git 诞生</h2><p>很多人都知道，Linus 在 1991 年创建了开源的 <code>Linux</code>，从此，<code>Linux</code> 系统不断发展，已经成为最大的服务器系统软件了。</p><p>Linus 虽然创建了 <code>Linux</code>，但 <code>Linux</code> 的壮大是靠全世界热心的志愿者参与的，这么多人在世界各地为 <code>Linux</code> 编写代码，那 <code>Linux</code> 的代码是如何管理的呢？</p><p>事实是，在 2002 年以前，世界各地的志愿者把源代码文件通过 <code>diff</code> 的方式发给 Linus，然后由 Linus 本人通过手工方式合并代码！</p><p>你也许会想，为什么 Linus 不把 <code>Linux</code> 代码放到版本控制系统里呢？不是有 <code>CVS</code>、<code>SVN</code> 这些免费的版本控制系统吗？因为 Linus 坚定地反对 <code>CVS</code> 和 <code>SVN</code>，这些集中式的版本控制系统不但速度慢，而且必须联网才能使用。有一些商用的版本控制系统，虽然比 <code>CVS</code>、<code>SVN</code> 好用，但那是付费的，和 <code>Linux</code> 的开源精神不符。</p><p>不过，到了 2002 年，<code>Linux</code> 系统已经发展了十年了，代码库之大让 Linus 很难继续通过手工方式管理了，社区的弟兄们也对这种方式表达了强烈不满，于是 Linus 选择了一个商业的版本控制系统 BitKeeper，BitKeeper 的东家 BitMover 公司出于人道主义精神，授权 <code>Linux</code> 社区免费使用这个版本控制系统。</p><p>安定团结的大好局面在 2005 年就被打破了，原因是 <code>Linux</code> 社区牛人聚集，不免沾染了一些梁山好汉的江湖习气。开发 Samba 的 Andrew 试图破解 BitKeeper 的协议（这么干的其实也不只他一个），被 BitMover 公司发现了（监控工作做得不错！），于是 BitMover 公司怒了，要收回 <code>Linux</code> 社区的免费使用权。</p><p>Linus 可以向 BitMover 公司道个歉，保证以后严格管教弟兄们，嗯，这是不可能的。实际情况是这样的：</p><p>Linus 花了两周时间自己用 C 写了一个分布式版本控制系统，这就是 <code>Git</code>！一个月之内，<code>Linux</code> 系统的源码已经由 <code>Git</code> 管理了！</p><p><code>Git</code> 迅速成为最流行的分布式版本控制系统，尤其是 2008 年，Github 网站上线了，它为开源项目免费提供 <code>Git</code> 存储，无数开源项目开始迁移至 Github，包括 jQuery，PHP，Ruby 等等。</p><p>历史就是这么偶然，如果不是当年 BitMover 公司威胁 <code>Linux</code> 社区，可能现在我们就没有免费而超级好用的 <code>Git</code> 了。</p><h2 id="集中式-vs-分布式" tabindex="-1"><a class="header-anchor" href="#集中式-vs-分布式" aria-hidden="true">#</a> 集中式 vs 分布式</h2>',13),t=[n];function a(r,u){return d(),o("div",null,t)}const p=e(i,[["render",a],["__file","index.html.vue"]]);export{p as default};
