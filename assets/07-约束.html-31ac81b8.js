import{_ as n,p as s,q as a,a1 as t}from"./framework-7db056f4.js";const e={},p=t(`<h1 id="约束" tabindex="-1"><a class="header-anchor" href="#约束" aria-hidden="true">#</a> 约束</h1><ol><li><p>非空约束: not null</p><ul><li>约束某字段不能为空</li></ul></li><li><p>唯一约束: unique</p><ul><li>约束字段值是唯一的</li></ul></li><li><p>主键约束: primary key (自增: auto_increment)</p><ul><li>主键是一张表的唯一表示，是非空唯一的，若需要自增，加上auto_increment</li></ul></li><li><p>默认约束: default</p><ul><li>若某字段的值没有添加，则会默认指定的值</li></ul></li><li><p>检查约束: check</p><ul><li>字段储存时必须要达到的条件</li></ul></li><li><p>外键约束: foreign key</p><ul><li>用来让两张表的数据之间建立连接，从而保证数据的完整性和一致性的</li></ul></li></ol><p><strong>例:</strong></p><table><thead><tr><th>字段名</th><th>字段含义</th><th>字段类型</th><th>约束条件</th><th>约束关键字</th></tr></thead><tbody><tr><td>id</td><td>id唯一标示</td><td>int</td><td>主键并且自动增长</td><td>primary key, auto_increment</td></tr><tr><td>name</td><td>姓名</td><td>varchar(10)</td><td>不为空,并且唯一</td><td>not null, unique</td></tr><tr><td>age</td><td>年龄</td><td>int</td><td>大于0,并且小于120</td><td>check</td></tr><tr><td>status</td><td>状态</td><td>char(1)</td><td>如果没有指定该值，默认为１</td><td>default</td></tr><tr><td>gender</td><td>性别</td><td>char(1)</td><td>无</td><td></td></tr></tbody></table><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token keyword">user</span> <span class="token punctuation">(</span>
    id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
    name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">unique</span><span class="token punctuation">,</span>
    age <span class="token keyword">int</span> <span class="token keyword">check</span><span class="token punctuation">(</span>age <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> age <span class="token operator">&lt;=</span> <span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">status</span> <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span>
    gender <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> 
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="外键约束" tabindex="-1"><a class="header-anchor" href="#外键约束" aria-hidden="true">#</a> 外键约束</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> 表名<span class="token punctuation">(</span>
    字段名 数据类型<span class="token punctuation">,</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">[</span><span class="token keyword">constraint</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>外键名称<span class="token punctuation">]</span> <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>外键字段名<span class="token punctuation">)</span> <span class="token keyword">references</span> 主表<span class="token punctuation">(</span>主表列名<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

添加外键
<span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">add</span> <span class="token keyword">constraint</span> 外键名称 <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>外键字段名<span class="token punctuation">)</span> <span class="token keyword">references</span> 主表<span class="token punctuation">(</span>主表列名<span class="token punctuation">)</span>

删除外键
<span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">drop</span> <span class="token keyword">foreign</span> <span class="token keyword">key</span> 外键名称<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>删除和更新行为</strong></li></ul><table><thead><tr><th>行为</th><th>说明</th></tr></thead><tbody><tr><td>no action</td><td>当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除/更新。(与restrict一致)</td></tr><tr><td>restrict</td><td>当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除/更新。(与no action一致)</td></tr><tr><td>cascade</td><td>当在父表中删除/更新对应记录时，首先检查该记录是否对应外键，如果有，则也删除/更新外键在子表中的记录。</td></tr><tr><td>set null</td><td>当在父表中删除对应记录时，首先检查该记录是否对应外键，如果有则设置子表中该外键值为null(这就要求该外键允许取null)</td></tr><tr><td>set default</td><td>父表有变更时，子表将外键列设置成一个默认的值(innodb不支持)</td></tr></tbody></table><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>创建外键关联时的例子
<span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">add</span> <span class="token keyword">constraint</span> 外键名称 foreigen <span class="token keyword">key</span> <span class="token punctuation">(</span>外键字段<span class="token punctuation">)</span> <span class="token keyword">references</span> 主表名<span class="token punctuation">(</span>主表字段名<span class="token punctuation">)</span> <span class="token keyword">on</span> <span class="token keyword">update</span> <span class="token keyword">constraint</span> <span class="token keyword">on</span> <span class="token keyword">delete</span> <span class="token keyword">cascade</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,10),l=[p];function o(d,c){return s(),a("div",null,l)}const r=n(e,[["render",o],["__file","07-约束.html.vue"]]);export{r as default};
