import{_ as t,p as d,q as e,a1 as n}from"./framework-7db056f4.js";const s={},a=n('<h1 id="模型定义" tabindex="-1"><a class="header-anchor" href="#模型定义" aria-hidden="true">#</a> 模型定义</h1><p>模型一般都是普通的 Golang 的结构体，Go的基本数据类型，或者指针。<code>sql.Scanner</code> 和 <code>driver.Valuer</code>，同时也支持接口。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>\n  gorm<span class="token punctuation">.</span>Model\n  Name         <span class="token builtin">string</span>\n  Age          sql<span class="token punctuation">.</span>NullInt64\n  Birthday     <span class="token operator">*</span>time<span class="token punctuation">.</span>Time\n  Email        <span class="token builtin">string</span>  <span class="token string">`gorm:&quot;type:varchar(100);unique_index&quot;`</span>\n  Role         <span class="token builtin">string</span>  <span class="token string">`gorm:&quot;size:255&quot;`</span> <span class="token comment">//设置字段的大小为255个字节</span>\n  MemberNumber <span class="token operator">*</span><span class="token builtin">string</span> <span class="token string">`gorm:&quot;unique;not null&quot;`</span> <span class="token comment">// 设置 memberNumber 字段唯一且不为空</span>\n  Num          <span class="token builtin">int</span>     <span class="token string">`gorm:&quot;AUTO_INCREMENT&quot;`</span> <span class="token comment">// 设置 Num字段自增</span>\n  Address      <span class="token builtin">string</span>  <span class="token string">`gorm:&quot;index:addr&quot;`</span> <span class="token comment">// 给Address 创建一个名字是  `addr`的索引</span>\n  IgnoreMe     <span class="token builtin">int</span>     <span class="token string">`gorm:&quot;-&quot;`</span> <span class="token comment">//忽略这个字段</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="结构标签" tabindex="-1"><a class="header-anchor" href="#结构标签" aria-hidden="true">#</a> 结构标签</h2><p>标签是声明模型时可选的标记。GORM 支持以下标记：</p><table><thead><tr><th>标签</th><th>说明</th></tr></thead><tbody><tr><td><code>Column</code></td><td>指定列的名称</td></tr><tr><td><code>Type</code></td><td>指定列的类型</td></tr><tr><td><code>Size</code></td><td>指定列的大小，默认是255</td></tr><tr><td><code>PRIMARY_KEY</code></td><td>指定一个列作为主键</td></tr><tr><td><code>UNIQUE</code></td><td>指定一个唯一的列</td></tr><tr><td><code>DEFAULT</code></td><td>指定一个列的默认值</td></tr><tr><td><code>PRECISION</code></td><td>指定列的数据的精度</td></tr><tr><td><code>NOT NULL</code></td><td>指定列的数据不为空</td></tr><tr><td><code>AUTO_INCREMENT</code></td><td>指定一个列的数据是否自增</td></tr><tr><td><code>INDEX</code></td><td>创建带或不带名称的索引，同名创建复合索引</td></tr><tr><td><code>UNIQUE_INDEX</code></td><td>类似<code>索引</code>，创建一个唯一的索引</td></tr><tr><td><code>EMBEDDED</code></td><td>将struct 设置为embedded</td></tr><tr><td><code>EMBEDDED_PREFIX</code></td><td>设置嵌入式结构的前缀名称</td></tr><tr><td><code>-</code></td><td>忽略这些字段</td></tr></tbody></table><h2 id="关联的结构标签" tabindex="-1"><a class="header-anchor" href="#关联的结构标签" aria-hidden="true">#</a> 关联的结构标签</h2><p>有关详细信息，请查看<code>关联</code>部分</p><table><thead><tr><th>标签</th><th>说明</th></tr></thead><tbody><tr><td><code>MANY2MANY</code></td><td>指定连接表名称</td></tr><tr><td><code>FOREIGNKEY</code></td><td>指定外键</td></tr><tr><td><code>ASSOCIATION_FOREIGNKEY</code></td><td>指定关联外键</td></tr><tr><td><code>POLYMORPHIC</code></td><td>指定多态类型</td></tr><tr><td><code>POLYMORPHIC_VALUE</code></td><td>指定多态的值</td></tr><tr><td><code>JOINTABLE_FOREIGNKEY</code></td><td>指定连接表的外键</td></tr><tr><td><code>ASSOCIATION_JOINTABLE_FOREIGNKEY</code></td><td>指定连接表的关联外键</td></tr><tr><td><code>SAVE_ASSOCIATIONS</code></td><td>是否自动保存关联</td></tr><tr><td><code>ASSOCIATION_AUTOUPDATE</code></td><td>是否自动更新关联</td></tr><tr><td><code>ASSOCIATION_AUTOCREATE</code></td><td>是否自动创建关联</td></tr><tr><td><code>ASSOCIATION_SAVE_REFERENCE</code></td><td>是否引用自动保存的关联</td></tr><tr><td><code>PRELOAD</code></td><td>是否自动预加载关联</td></tr></tbody></table>',9),o=[a];function r(c,i){return d(),e("div",null,o)}const p=t(s,[["render",r],["__file","02-模型.html.vue"]]);export{p as default};
