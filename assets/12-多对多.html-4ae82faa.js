import{_ as n,p as s,q as a,a1 as t}from"./framework-7db056f4.js";const e={},o=t(`<h1 id="many-to-many" tabindex="-1"><a class="header-anchor" href="#many-to-many" aria-hidden="true">#</a> Many To Many</h1><h2 id="多对多" tabindex="-1"><a class="header-anchor" href="#多对多" aria-hidden="true">#</a> 多对多</h2><p>多对多为两个模型增加了一个中间表</p><p>例如，如果你的应用包含用户和语言， 一个用户会说多种语言，并且很多用户会说一种特定的语言。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// 用户拥有并属于多种语言， 使用  \`user_languages\` 作为中间表</span>
<span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    gorm<span class="token punctuation">.</span>Model
    Languages         <span class="token punctuation">[</span><span class="token punctuation">]</span>Language <span class="token string">\`gorm:&quot;many2many:user_languages;&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> Language <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    gorm<span class="token punctuation">.</span>Model
    Name <span class="token builtin">string</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="反向关联" tabindex="-1"><a class="header-anchor" href="#反向关联" aria-hidden="true">#</a> 反向关联</h2><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// 用户拥有并且属于多种语言，使用 \`user_languages\` 作为中间表</span>
<span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    gorm<span class="token punctuation">.</span>Model
    Languages         <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>Language <span class="token string">\`gorm:&quot;many2many:user_languages;&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> Language <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    gorm<span class="token punctuation">.</span>Model
    Name <span class="token builtin">string</span>
    Users               <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>User     <span class="token string">\`gorm:&quot;many2many:user_languages;&quot;\`</span>
<span class="token punctuation">}</span>

db<span class="token punctuation">.</span><span class="token function">Model</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>language<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Related</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users<span class="token punctuation">)</span>
<span class="token comment">//// SELECT * FROM &quot;users&quot; INNER JOIN &quot;user_languages&quot; ON &quot;user_languages&quot;.&quot;user_id&quot; = &quot;users&quot;.&quot;id&quot; WHERE  (&quot;user_languages&quot;.&quot;language_id&quot; IN (&#39;111&#39;))</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="外键" tabindex="-1"><a class="header-anchor" href="#外键" aria-hidden="true">#</a> 外键</h2><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> CustomizePerson <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  IdPerson <span class="token builtin">string</span>             <span class="token string">\`gorm:&quot;primary_key:true&quot;\`</span>
  Accounts <span class="token punctuation">[</span><span class="token punctuation">]</span>CustomizeAccount <span class="token string">\`gorm:&quot;many2many:PersonAccount;association_foreignkey:idAccount;foreignkey:idPerson&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> CustomizeAccount <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  IdAccount <span class="token builtin">string</span> <span class="token string">\`gorm:&quot;primary_key:true&quot;\`</span>
  Name      <span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>外键会为两个结构体创建一个多对多的关系，并且这个关系将通过外键<code>customize_person_id_person</code> 和 <code>customize_account_id_account</code> 保存到中间表 PersonAccount。</p><h2 id="中间表外键" tabindex="-1"><a class="header-anchor" href="#中间表外键" aria-hidden="true">#</a> 中间表外键</h2><p>如果你想改变中间表的外键，你可以用标签 <code>association_jointable_foreignkey</code>, <code>jointable_foreignkey</code></p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> CustomizePerson <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  IdPerson <span class="token builtin">string</span>             <span class="token string">\`gorm:&quot;primary_key:true&quot;\`</span>
  Accounts <span class="token punctuation">[</span><span class="token punctuation">]</span>CustomizeAccount <span class="token string">\`gorm:&quot;many2many:PersonAccount;foreignkey:idPerson;association_foreignkey:idAccount;association_jointable_foreignkey:account_id;jointable_foreignkey:person_id;&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> CustomizeAccount <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  IdAccount <span class="token builtin">string</span> <span class="token string">\`gorm:&quot;primary_key:true&quot;\`</span>
  Name      <span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自引用" tabindex="-1"><a class="header-anchor" href="#自引用" aria-hidden="true">#</a> 自引用</h2><p>为了定义一个自引用的多对多关系，你不得不改变中间表的关联外键。</p><p>和来源表外键不同的是它是通过结构体的名字和主键生成的，例如：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  gorm<span class="token punctuation">.</span>Model
  Friends <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>User <span class="token string">\`gorm:&quot;many2many:friendships;association_jointable_foreignkey:friend_id&quot;\`</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>GORM 将创建一个带外键 <code>user_id</code> 和 <code>friend_id</code> 的中间表， 并且使用它去保存用户表的自引用关系。</p><p>然后你可以像普通关系一样操作它， 例如：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>DB<span class="token punctuation">.</span><span class="token function">Preload</span><span class="token punctuation">(</span><span class="token string">&quot;Friends&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">,</span> <span class="token string">&quot;id = ?&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>

DB<span class="token punctuation">.</span><span class="token function">Model</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Association</span><span class="token punctuation">(</span><span class="token string">&quot;Friends&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;friend1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;friend2&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

DB<span class="token punctuation">.</span><span class="token function">Model</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Association</span><span class="token punctuation">(</span><span class="token string">&quot;Friends&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;friend2&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

DB<span class="token punctuation">.</span><span class="token function">Model</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Association</span><span class="token punctuation">(</span><span class="token string">&quot;Friends&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Replace</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;new friend&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

DB<span class="token punctuation">.</span><span class="token function">Model</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Association</span><span class="token punctuation">(</span><span class="token string">&quot;Friends&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

DB<span class="token punctuation">.</span><span class="token function">Model</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Association</span><span class="token punctuation">(</span><span class="token string">&quot;Friends&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Count</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用多对多" tabindex="-1"><a class="header-anchor" href="#使用多对多" aria-hidden="true">#</a> 使用多对多</h2><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>db<span class="token punctuation">.</span><span class="token function">Model</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Related</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>languages<span class="token punctuation">,</span> <span class="token string">&quot;Languages&quot;</span><span class="token punctuation">)</span>
<span class="token comment">//// SELECT * FROM &quot;languages&quot; INNER JOIN &quot;user_languages&quot; ON &quot;user_languages&quot;.&quot;language_id&quot; = &quot;languages&quot;.&quot;id&quot; WHERE &quot;user_languages&quot;.&quot;user_id&quot; = 111</span>

<span class="token comment">//  当查询用户时预加载 Language</span>
db<span class="token punctuation">.</span><span class="token function">Preload</span><span class="token punctuation">(</span><span class="token string">&quot;Languages&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22),p=[o];function c(i,u){return s(),a("div",null,p)}const r=n(e,[["render",c],["__file","12-多对多.html.vue"]]);export{r as default};
