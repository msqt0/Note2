import{_ as a,p as n,q as s,a1 as t}from"./framework-7db056f4.js";const e={},l=t(`<h1 id="html" tabindex="-1"><a class="header-anchor" href="#html" aria-hidden="true">#</a> HTML</h1><h3 id="form-form-表单" tabindex="-1"><a class="header-anchor" href="#form-form-表单" aria-hidden="true">#</a> <code>&lt;form&gt;&lt;/form&gt;</code>表单</h3><ol><li><p>可以将用户的数据提交给服务器</p></li><li><p>一个页面可以有多个表单</p></li></ol><blockquote><p>W3C 的 HTTP 协议规定 表单提交数据给服务器的格式为：<code>action?name=value&amp;name=value&amp;...</code></p><p>后端中，java 可以 String split(”&amp;“)方式 方便地获取数据</p></blockquote><h5 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h5><ul><li><strong>action</strong>用来指定数据提交给哪个服务器（请求路径）</li><li><strong>method</strong> 用来指定表单提交数据的方式 <ul><li>get 若不填写表单默认采用 get，会将用户信息显示在浏览器的 url 栏</li><li>post 用户提交的信息不会显示在浏览器的地址栏，当用户信息有敏感信息必须使用 post</li></ul></li></ul><blockquote><p>采用 get 的方式提交数据，其实相当于以超链接的方式<code>action?name=value&amp;name=value&amp;...</code></p></blockquote><h3 id="input-输入标签" tabindex="-1"><a class="header-anchor" href="#input-输入标签" aria-hidden="true">#</a> <code>&lt;input&gt;</code>输入标签</h3><p>同一个表单的 input 要放在同一个 form 下，否则没有关联作用</p><h5 id="type-控件" tabindex="-1"><a class="header-anchor" href="#type-控件" aria-hidden="true">#</a> type 控件</h5><p>input 标签的 type 属性决定该标签的具体功能</p><ul><li><strong>text</strong>用来输入文本信息</li><li><strong>button</strong> 普通按钮</li><li><strong>checkbox</strong> 方形多选框</li><li><strong>radio</strong>圆形单选框</li><li><strong>email</strong>邮件输入框（html5 新增）</li><li><strong>passwd</strong>秘密输入框</li><li><strong>file</strong> 文件上传专用</li><li><strong>reset</strong> 清空 text 框内容的按钮</li><li><strong>submit</strong>用来提交表单信息的按钮</li><li><strong>hidden</strong> 隐藏域，网页上看不见但在表单提交的时候，数据会自动提交给服务器</li></ul><blockquote><p>当使用 file 控件时，form 标签最好使用加上属性 <code>enctype=&quot;multipart/form-data&quot;</code>目的是将一些数据上传到后台</p></blockquote><h5 id="name" tabindex="-1"><a class="header-anchor" href="#name" aria-hidden="true">#</a> name</h5><ol><li><strong>想要提交 input 中的信息，必须要在该 input 中加入 name 属性，否则无法提交</strong></li><li>也有相当于 id 一样的功能用来被查找</li><li>当多个 radio 的 name 一样时，只能选择一项</li></ol><blockquote><p>当 name 没有写的时候，该项不会 提交给服务器。</p><p>但是当 value 没有写的时候，value 的默认值是空字符串，会将空字符串提交给服务器</p></blockquote><h5 id="value" tabindex="-1"><a class="header-anchor" href="#value" aria-hidden="true">#</a> value</h5><ol><li>input 标签的 value 属性显示按钮上的文本</li><li>提交给服务器的数据是 value 的值，radio checkbox 如需要提交数据，要手动加上 value</li></ol><h5 id="checked" tabindex="-1"><a class="header-anchor" href="#checked" aria-hidden="true">#</a> checked</h5><p>若想让 radio 和 checkbox 默认被选上，需要加上 checked</p><h5 id="readonly" tabindex="-1"><a class="header-anchor" href="#readonly" aria-hidden="true">#</a> readonly</h5><p>用户无法修改，可以查看，提交</p><h5 id="disabled" tabindex="-1"><a class="header-anchor" href="#disabled" aria-hidden="true">#</a> disabled</h5><p>用户无法修改，可以查看，无法提交（即使有 name 也无法提交）</p><h5 id="maxlenghth" tabindex="-1"><a class="header-anchor" href="#maxlenghth" aria-hidden="true">#</a> maxlenghth</h5><p>用户可以输入的最大长度</p><h3 id="select-select-选择标签" tabindex="-1"><a class="header-anchor" href="#select-select-选择标签" aria-hidden="true">#</a> <code>&lt;select&gt;&lt;/select&gt;</code>选择标签</h3><p>下拉菜单选项</p><h5 id="属性-1" tabindex="-1"><a class="header-anchor" href="#属性-1" aria-hidden="true">#</a> 属性</h5><ul><li>同样需要指定<strong>name</strong></li><li>如果想要默认中一项，需要加上 selected</li><li>multiple 开启多选模式，按住 ctrl 多选</li><li>size 默认在框内显示的条数</li></ul><h5 id="option-选项" tabindex="-1"><a class="header-anchor" href="#option-选项" aria-hidden="true">#</a> <code>&lt;option&gt;</code>选项</h5><ul><li>需要自定<strong>value</strong></li></ul><h3 id="textarea-textarea-文本域" tabindex="-1"><a class="header-anchor" href="#textarea-textarea-文本域" aria-hidden="true">#</a> <code>&lt;textarea&gt;&lt;/textarea&gt;</code>文本域</h3><h5 id="rows-cols" tabindex="-1"><a class="header-anchor" href="#rows-cols" aria-hidden="true">#</a> rows &amp; cols</h5><ul><li>行宽和列高</li></ul><h5 id="name-1" tabindex="-1"><a class="header-anchor" href="#name-1" aria-hidden="true">#</a> name</h5><ul><li>提交数据需要指定 name</li></ul><h1 id="html5" tabindex="-1"><a class="header-anchor" href="#html5" aria-hidden="true">#</a> HTML5</h1><p>新的文档类型（DOCTYPE）声明非常简单：<code>&lt;!DOCTYPE html&gt;</code></p><p>html5 默认编码为 UTF-8</p><p>新增内容：</p><ul><li>新增语义元素<code>&lt;header&gt;, &lt;footer&gt;, &lt;article&gt;, and &lt;section&gt;</code></li><li>新增表单控件比如数字、日期、时间、日历和滑块。</li><li>图像支持<code>&lt;canvas&gt;和&lt;svg&gt;</code></li><li>多媒体支持<code>&lt;video&gt;和&lt;audio&gt;</code></li><li>强大的新 API，比如用本地存储取代 cookie</li></ul><h4 id="语义" tabindex="-1"><a class="header-anchor" href="#语义" aria-hidden="true">#</a> 语义</h4><p>八个新语义标签 header, section, footer, aside, nav, main, article, figure 都块级元素</p><p>可以把 CSS <em>display</em> 属性设置为 <em>block</em>，以确保老式浏览器中正确的行为：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">header,
section,
footer,
aside,
nav,
main,
article,
figure</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>所有浏览器，不论新旧，都会自动把未识别元素当做行内元素来处理。</p></blockquote><p>自定义</p><p>可以通过浏览器向 HTML 添加新的自定义标签</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Creating an HTML Element<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
      document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;myHero&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
      <span class="token selector">myHero</span> <span class="token punctuation">{</span>
        <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
        <span class="token property">background-color</span><span class="token punctuation">:</span> #ddd<span class="token punctuation">;</span>
        <span class="token property">padding</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
        <span class="token property">font-size</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>My First Heading<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>My first paragraph.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>myHero</span><span class="token punctuation">&gt;</span></span>My First Hero<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>myHero</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>IE8 以下不允许向未知的元素添加样式</p></blockquote><h4 id="表单" tabindex="-1"><a class="header-anchor" href="#表单" aria-hidden="true">#</a> 表单</h4><ul><li><p>灰色提示文本：placeholder</p></li><li><p>记忆输入下一次自动提示特性：autocomplete</p></li><li><p>设置表单必填：required</p></li><li><p>使用正则表达式：pattern</p></li><li><p>在表单中设置了必填。提交表单的时候不验证：novalidate（form 标签后使用） 或 formnovalidate（按钮）</p></li><li><p>输入控件 email, url, number, range, date 类，search, color, tel</p></li><li><p>下拉输入选择控件：list 和 datalist</p></li><li><p>label 标签的 for 属性中填写的的 id 会把 label 和另一个元素绑定，若绑定 radio 则点击 label 也会选中 radio</p></li></ul><h4 id="约束验证-api" tabindex="-1"><a class="header-anchor" href="#约束验证-api" aria-hidden="true">#</a> 约束验证 API</h4><ol><li>willVAlidate 属性 <ul><li>代表元素约束有没有被符合，若没有返回 false</li></ul></li><li><strong>validity 属性</strong><ul><li>表示验证状态</li></ul></li><li>validationMessage 属性 <ul><li>描述与元素相关约束的失败信息</li></ul></li><li><strong>checkValidity()方法</strong><ul><li>如果元素有没有满足它的任意约束，返回 false，其他情况返回 true</li></ul></li><li><strong>setCustomValidity()方法</strong><ul><li>设置预定义信息</li></ul></li></ol>`,55),i=[l];function p(o,c){return n(),s("div",null,i)}const r=a(e,[["render",p],["__file","表单及html5.html.vue"]]);export{r as default};
